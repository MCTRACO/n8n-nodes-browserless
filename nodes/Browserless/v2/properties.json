[
  {
    "displayName": "Resource",
    "name": "resource",
    "type": "hidden",
    "noDataExpression": true,
    "options": [
      {
        "name": "Browser Rest Apis",
        "value": "Browser Rest Apis",
        "description": ""
      }
    ],
    "default": ""
  },
  {
    "displayName": "Operation",
    "name": "operation",
    "type": "options",
    "noDataExpression": true,
    "displayOptions": {
      "show": {
        "resource": [
          "Browser Rest Apis"
        ]
      }
    },
    "options": [
      {
        "name": "Unblock",
        "value": "Unblock",
        "action": "Unblock",
        "description": "> This API is only available for Enterprise and Cloud-unit plans. [Contact us for more information here.](https://www.browserless.io/contact/), or [sign-up here](https://www.browserless.io/pricing/). Unblocks the provided URL from being blocked due to bot detection. Returns a payload of Cookies, HTML, a base64 encoded screenshot, and a \"browserWSEndpoint\" to allow connecting to the browser when specified in the JSON Payload. Only supports CDP or Puppeteer like libraries when connecting to the \"browserWSEndpoint\"",
        "routing": {
          "request": {
            "method": "POST",
            "url": "=/unblock"
          }
        }
      },
      {
        "name": "Pdf",
        "value": "Pdf",
        "action": "Pdf",
        "description": "A JSON-based API for getting a PDF binary from either a supplied \"url\" or \"html\" payload in your request. Many options exist for injecting cookies, request interceptors, user-agents and waiting for selectors, timers and more",
        "routing": {
          "request": {
            "method": "POST",
            "url": "=/pdf",
            "encoding": "arraybuffer"
          },
          "output": {
            "postReceive": [
              {
                "type": "binaryData",
                "properties": {
                  "destinationProperty": "data"
                }
              }
            ]
          }
        }
      },
      {
        "name": "Screenshot",
        "value": "Screenshot",
        "action": "Screenshot",
        "description": "A JSON-based API for getting a screenshot binary from either a supplied \"url\" or \"html\" payload in your request. Many options exist including cookies, user-agents, setting timers and network mocks",
        "routing": {
          "request": {
            "method": "POST",
            "url": "=/screenshot",
            "encoding": "arraybuffer"
          },
          "output": {
            "postReceive": [
              {
                "type": "binaryData",
                "properties": {
                  "destinationProperty": "data"
                }
              }
            ]
          }
        }
      },
      {
        "name": "Content",
        "value": "Content",
        "action": "Content",
        "description": "A JSON-based API. Given a \"url\" or \"html\" field, runs and returns HTML content after the page has loaded and JavaScript has parsed",
        "routing": {
          "request": {
            "method": "POST",
            "url": "=/content"
          },
          "output": {
            "postReceive": [
              {
                "type": "setKeyValue",
                "properties": {
                  "data": "={{$response.body}}"
                }
              }
            ]
          }
        }
      },
      {
        "name": "Download",
        "value": "Download",
        "action": "Download",
        "description": "A JSON or JavaScript content-type API for returning files Chrome has downloaded during the execution of puppeteer code, which is ran inside context of the browser. Browserless sets up a blank page, a fresh download directory, injects your puppeteer code, and then executes it. You can load external libraries via the \"import\" syntax, and import ESM-style modules that are written for execution inside of the browser. Once your script is finished, any downloaded files from Chromium are returned back with the appropriate content-type header",
        "routing": {
          "request": {
            "method": "POST",
            "url": "=/download"
          },
          "output": {
            "postReceive": [
              {
                "type": "setKeyValue",
                "properties": {
                  "data": "={{$response.body}}"
                }
              }
            ]
          }
        }
      },
      {
        "name": "Execute",
        "value": "Execute",
        "action": "Execute",
        "description": "A JSON or JavaScript content-type API for running puppeteer code in the browser's context. Browserless sets up a blank page, injects your puppeteer code, and runs it. You can optionally load external libraries via the \"import\" module that are meant for browser usage. Values returned from the function are checked and an appropriate content-type and response is sent back to your HTTP call",
        "routing": {
          "request": {
            "method": "POST",
            "url": "=/function"
          },
          "output": {
            "postReceive": [
              {
                "type": "setKeyValue",
                "properties": {
                  "data": "={{$response.body}}"
                }
              }
            ]
          }
        }
      },
      {
        "name": "Performance",
        "value": "Performance",
        "action": "Performance",
        "description": "Run lighthouse performance audits with a supplied \"url\" in your JSON payload",
        "routing": {
          "request": {
            "method": "POST",
            "url": "=/performance"
          }
        }
      },
      {
        "name": "Scrape",
        "value": "Scrape",
        "action": "Scrape",
        "description": "A JSON-based API that returns text, html, and meta-data from a given list of selectors. Debugging information is available by sending in the appropriate flags in the \"debugOpts\" property. Responds with an array of JSON objects",
        "routing": {
          "request": {
            "method": "POST",
            "url": "=/scrape"
          }
        }
      }
    ],
    "default": ""
  },
  {
    "displayName": "POST /unblock",
    "name": "operation",
    "type": "notice",
    "typeOptions": {
      "theme": "info"
    },
    "default": "",
    "displayOptions": {
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Unblock"
        ]
      }
    }
  },
  {
    "displayName": "Browser WS Endpoint",
    "name": "browserWSEndpoint",
    "type": "boolean",
    "default": true,
    "description": "Whether or not to keep the underlying browser alive and around for future reconnects. Defaults to false",
    "routing": {
      "request": {
        "body": {
          "browserWSEndpoint": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Unblock"
        ]
      }
    }
  },
  {
    "displayName": "Content",
    "name": "content",
    "type": "boolean",
    "default": true,
    "description": "Whether or not to to return content for the site, defaults to true",
    "routing": {
      "request": {
        "body": {
          "content": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Unblock"
        ]
      }
    }
  },
  {
    "displayName": "Screenshot",
    "name": "screenshot",
    "type": "boolean",
    "default": true,
    "description": "Whether or not to to return a full-page screenshot for the site, defaults to true",
    "routing": {
      "request": {
        "body": {
          "screenshot": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Unblock"
        ]
      }
    }
  },
  {
    "displayName": "Ttl",
    "name": "ttl",
    "type": "number",
    "default": 0,
    "description": "When the browserWSEndpoint is requested this tells browserless how long to keep this browser alive for re-connection until shutting it down completely. Maximum of 30000 for 30 seconds (30,000ms)",
    "routing": {
      "request": {
        "body": {
          "ttl": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Unblock"
        ]
      }
    }
  },
  {
    "displayName": "Custom Body",
    "name": "customBody",
    "type": "json",
    "default": "{\n  \"bestAttempt\": true,\n  \"url\": \"string\",\n  \"browserWSEndpoint\": true,\n  \"cookies\": true,\n  \"content\": true,\n  \"screenshot\": true,\n  \"ttl\": 0,\n  \"gotoOptions\": {\n    \"referer\": \"string\",\n    \"referrerPolicy\": \"string\",\n    \"timeout\": 0,\n    \"waitUntil\": [\n      \"domcontentloaded\"\n    ],\n    \"signal\": {\n      \"aborted\": true,\n      \"onabort\": {},\n      \"reason\": {}\n    }\n  },\n  \"waitForEvent\": {\n    \"event\": \"string\",\n    \"timeout\": 0\n  },\n  \"waitForFunction\": {\n    \"fn\": \"string\",\n    \"polling\": {},\n    \"timeout\": 0\n  },\n  \"waitForSelector\": {\n    \"hidden\": true,\n    \"selector\": \"string\",\n    \"timeout\": 0,\n    \"visible\": true\n  },\n  \"waitFor\": 0\n}",
    "description": "Custom body to send",
    "routing": {
      "request": {
        "body": {
          "customBody": "={{JSON.parse($value)}}"
        }
      },
      "send": {
        "preSend": [
          "${helpers.hooks.preSendActionCustonBody}"
        ]
      }
    },
    "displayOptions": {
      "show": {
        "useCustomBody": [
          true
        ],
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Unblock"
        ]
      }
    }
  },
  {
    "displayName": "Url",
    "name": "url",
    "type": "string",
    "default": "",
    "description": "The URL of the site you want to unblock",
    "routing": {
      "request": {
        "body": {
          "url": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Unblock"
        ]
      }
    },
    "required": true
  },
  {
    "displayName": "Wait For Timeout",
    "name": "waitFor",
    "type": "number",
    "default": 0,
    "routing": {
      "request": {
        "body": {
          "waitFor": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Unblock"
        ]
      }
    }
  },
  {
    "displayName": "Wait For Selector",
    "name": "waitForSelector",
    "type": "fixedCollection",
    "default": {},
    "options": [
      {
        "name": "items",
        "displayName": "Items",
        "values": [
          {
            "type": "boolean",
            "default": true,
            "description": "",
            "name": "hidden",
            "displayName": "Hidden"
          },
          {
            "type": "string",
            "default": "",
            "description": "",
            "name": "selector",
            "displayName": "Selector"
          },
          {
            "type": "number",
            "default": 0,
            "description": "",
            "name": "timeout",
            "displayName": "Timeout"
          },
          {
            "type": "boolean",
            "default": true,
            "description": "",
            "name": "visible",
            "displayName": "Visible"
          }
        ]
      }
    ],
    "routing": {
      "request": {
        "body": {
          "waitForSelector": "={{$value.items}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Unblock"
        ]
      }
    }
  },
  {
    "displayName": "Goto Options",
    "name": "gotoOptions",
    "type": "fixedCollection",
    "default": {},
    "description": "An optional goto parameter object for considering when the page is done loading.",
    "options": [
      {
        "name": "items",
        "displayName": "Items",
        "values": [
          {
            "type": "string",
            "default": "",
            "description": "If provided, it will take preference over the referer header value set by {@link Page.setExtraHTTPHeaderspage.setExtraHTTPHeaders()}",
            "name": "referer",
            "displayName": "Referer"
          },
          {
            "type": "string",
            "default": "",
            "description": "If provided, it will take preference over the referer-policy header value set by {@link Page.setExtraHTTPHeaderspage.setExtraHTTPHeaders()}",
            "name": "referrerPolicy",
            "displayName": "Referrerpolicy"
          },
          {
            "type": "number",
            "default": 0,
            "description": "Maximum wait time in milliseconds. Pass 0 to disable the timeout. The default value can be changed by using the {@link Page.setDefaultTimeout} or {@link Page.setDefaultNavigationTimeout} methods",
            "name": "timeout",
            "displayName": "Timeout"
          },
          {
            "type": "multiOptions",
            "default": [],
            "description": "When to consider waiting succeeds. Given an array of event strings, waiting is considered to be successful after all events have been fired",
            "options": [
              {
                "name": "domcontentloaded",
                "value": "domcontentloaded"
              },
              {
                "name": "load",
                "value": "load"
              },
              {
                "name": "networkidle0",
                "value": "networkidle0"
              },
              {
                "name": "networkidle2",
                "value": "networkidle2"
              }
            ],
            "name": "waitUntil",
            "displayName": "Waituntil"
          },
          {
            "type": "fixedCollection",
            "default": {},
            "description": "A signal object that allows you to cancel the call",
            "options": [
              {
                "name": "items",
                "displayName": "Items",
                "values": [
                  {
                    "type": "boolean",
                    "default": true,
                    "description": "",
                    "name": "aborted",
                    "displayName": "Aborted"
                  },
                  {
                    "type": "json",
                    "default": "{}",
                    "description": "",
                    "name": "onabort",
                    "displayName": "Onabort"
                  },
                  {
                    "type": "string",
                    "default": "",
                    "description": "",
                    "name": "reason",
                    "displayName": "Reason"
                  }
                ]
              }
            ],
            "name": "signal",
            "displayName": "Signal"
          }
        ]
      }
    ],
    "routing": {
      "request": {
        "body": {
          "gotoOptions": "={{$value.items}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Unblock"
        ]
      }
    }
  },
  {
    "displayName": "Wait For Event",
    "name": "waitForEvent",
    "type": "fixedCollection",
    "default": {},
    "options": [
      {
        "name": "items",
        "displayName": "Items",
        "values": [
          {
            "type": "string",
            "default": "",
            "description": "",
            "name": "event",
            "displayName": "Event"
          },
          {
            "type": "number",
            "default": 0,
            "description": "",
            "name": "timeout",
            "displayName": "Timeout"
          }
        ]
      }
    ],
    "routing": {
      "request": {
        "body": {
          "waitForEvent": "={{$value.items}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Unblock"
        ]
      }
    }
  },
  {
    "displayName": "Wait For Function",
    "name": "waitForFunction",
    "type": "fixedCollection",
    "default": {},
    "options": [
      {
        "name": "items",
        "displayName": "Items",
        "values": [
          {
            "type": "string",
            "default": "",
            "description": "The function, or statement, to be evaluated in browser context",
            "name": "fn",
            "displayName": "Fn"
          },
          {
            "type": "string",
            "description": "An interval at which the pageFunction is executed, defaults to raf. If polling is a number, then it is treated as an interval in milliseconds at which the function would be executed. If polling is a string, then it can be one of the following values: \"raf\" or \"mutation\"",
            "name": "polling",
            "displayName": "Polling"
          },
          {
            "type": "number",
            "default": 0,
            "description": "Maximum time to wait for in milliseconds. Defaults to 30000 (30 seconds). Pass 0 to disable timeout",
            "name": "timeout",
            "displayName": "Timeout"
          }
        ]
      }
    ],
    "routing": {
      "request": {
        "body": {
          "waitForFunction": "={{$value.items}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Unblock"
        ]
      }
    }
  },
  {
    "displayName": "Timeout",
    "name": "timeout",
    "description": "Override the system-level timeout for this request. Accepts a value in milliseconds",
    "default": 0,
    "type": "number",
    "routing": {
      "request": {
        "qs": {
          "timeout": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Unblock"
        ]
      }
    }
  },
  {
    "displayName": "Best Attempt",
    "name": "bestAttempt",
    "type": "boolean",
    "default": true,
    "description": "When bestAttempt is set to true, browserless attempt to proceed when \"awaited\" events fail or timeout. This includes things like goto, waitForSelector, and more",
    "routing": {
      "request": {
        "body": {
          "bestAttempt": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Unblock"
        ]
      }
    }
  },
  {
    "name": "enableCookies",
    "displayName": "Enable Cookies",
    "type": "boolean",
    "default": false,
    "description": "Enable cookies",
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Unblock"
        ]
      }
    }
  },
  {
    "displayName": "Cookies",
    "name": "cookies",
    "type": "json",
    "default": "[]",
    "description": "Array of cookie objects expected by cookie-editor extension",
    "routing": {
      "request": {
        "body": {
          "cookies": "={{ (JSON.parse($value) || []).reduce((a, c) => ({ ...a, [c.name]: c.value }), {}) }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Unblock"
        ],
        "enableCookies": [
          true
        ]
      }
    },
    "typeOptions": {},
    "options": []
  },
  {
    "displayName": "Block Ads",
    "name": "blockAds",
    "description": "Whether or nor to load ad-blocking extensions for the session. This currently uses uBlock Origin and may cause certain sites to not load properly",
    "default": true,
    "type": "boolean",
    "routing": {
      "request": {
        "qs": {
          "blockAds": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Unblock"
        ]
      }
    }
  },
  {
    "name": "enableLaunch",
    "displayName": "Enable Launch",
    "type": "boolean",
    "default": false,
    "description": "Launch a new browser instance",
    "displayOptions": {
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Unblock"
        ]
      }
    }
  },
  {
    "displayName": "Launch",
    "name": "launch",
    "description": "",
    "default": {},
    "type": "collection",
    "typeOptions": {},
    "placeholder": "Add item",
    "options": [
      {
        "type": "fixedCollection",
        "default": [],
        "typeOptions": {
          "multipleValues": true
        },
        "displayName": "Args",
        "name": "args",
        "description": "",
        "placeholder": "Add item",
        "options": [
          {
            "name": "items",
            "displayName": "Items",
            "values": [
              {
                "name": "Item",
                "displayName": "Item",
                "type": "string",
                "default": ""
              }
            ]
          }
        ]
      },
      {
        "type": "fixedCollection",
        "default": {},
        "description": "",
        "options": [
          {
            "name": "items",
            "displayName": "Items",
            "values": [
              {
                "type": "number",
                "default": 0,
                "description": "",
                "name": "deviceScaleFactor",
                "displayName": "Devicescalefactor"
              },
              {
                "type": "boolean",
                "default": true,
                "description": "",
                "name": "hasTouch",
                "displayName": "Hastouch"
              },
              {
                "type": "number",
                "default": 0,
                "description": "",
                "name": "height",
                "displayName": "Height"
              },
              {
                "type": "boolean",
                "default": true,
                "description": "",
                "name": "isLandscape",
                "displayName": "Islandscape"
              },
              {
                "type": "boolean",
                "default": true,
                "description": "",
                "name": "isMobile",
                "displayName": "Ismobile"
              },
              {
                "type": "number",
                "default": 0,
                "description": "",
                "name": "width",
                "displayName": "Width"
              }
            ]
          }
        ],
        "name": "defaultViewport",
        "displayName": "Defaultviewport"
      },
      {
        "type": "boolean",
        "default": true,
        "description": "",
        "name": "devtools",
        "displayName": "Devtools"
      },
      {
        "type": "boolean",
        "default": true,
        "description": "",
        "name": "dumpio",
        "displayName": "Dumpio"
      },
      {
        "type": "options",
        "default": false,
        "description": "",
        "options": [
          {
            "name": "False",
            "value": false
          },
          {
            "name": "Shell",
            "value": "shell"
          },
          {
            "name": "True",
            "value": true
          }
        ],
        "name": "headless",
        "displayName": "Headless"
      },
      {
        "type": "fixedCollection",
        "default": [],
        "typeOptions": {
          "multipleValues": true
        },
        "displayName": "Ignoredefaultargs",
        "name": "ignoreDefaultArgs",
        "description": "",
        "placeholder": "Add item",
        "options": [
          {
            "name": "items",
            "displayName": "Items",
            "values": [
              {
                "name": "Item",
                "displayName": "Item",
                "type": "string",
                "default": ""
              }
            ]
          }
        ]
      },
      {
        "type": "boolean",
        "default": true,
        "description": "",
        "name": "ignoreHTTPSErrors",
        "displayName": "Ignorehttpserrors"
      },
      {
        "type": "number",
        "default": 0,
        "description": "",
        "name": "slowMo",
        "displayName": "Slowmo"
      },
      {
        "type": "boolean",
        "default": true,
        "description": "",
        "name": "stealth",
        "displayName": "Stealth"
      },
      {
        "type": "number",
        "default": 0,
        "description": "",
        "name": "timeout",
        "displayName": "Timeout"
      },
      {
        "type": "string",
        "default": "",
        "description": "",
        "name": "userDataDir",
        "displayName": "Userdatadir"
      },
      {
        "type": "boolean",
        "default": true,
        "description": "",
        "name": "waitForInitialPage",
        "displayName": "Waitforinitialpage"
      }
    ],
    "routing": {
      "request": {
        "qs": {
          "launch": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Unblock"
        ],
        "enableLaunch": [
          true
        ]
      }
    }
  },
  {
    "displayName": "POST /pdf",
    "name": "operation",
    "type": "notice",
    "typeOptions": {
      "theme": "info"
    },
    "default": "",
    "displayOptions": {
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Pdf"
        ]
      }
    }
  },
  {
    "displayName": "Custom Body",
    "name": "customBody",
    "type": "json",
    "default": "{\n  \"addScriptTag\": [\n    {\n      \"url\": \"string\",\n      \"path\": \"string\",\n      \"content\": \"string\",\n      \"type\": \"string\",\n      \"id\": \"string\"\n    }\n  ],\n  \"addStyleTag\": [\n    {\n      \"url\": \"string\",\n      \"path\": \"string\",\n      \"content\": \"string\"\n    }\n  ],\n  \"authenticate\": {\n    \"username\": \"string\",\n    \"password\": \"string\"\n  },\n  \"bestAttempt\": true,\n  \"cookies\": [\n    {\n      \"name\": \"string\",\n      \"value\": \"string\",\n      \"url\": \"string\",\n      \"domain\": \"string\",\n      \"path\": \"string\",\n      \"secure\": true,\n      \"httpOnly\": true,\n      \"sameSite\": \"Lax\",\n      \"expires\": 0,\n      \"priority\": \"High\",\n      \"sameParty\": true,\n      \"sourceScheme\": \"NonSecure\",\n      \"partitionKey\": \"string\"\n    }\n  ],\n  \"emulateMediaType\": \"string\",\n  \"gotoOptions\": {\n    \"referer\": \"string\",\n    \"referrerPolicy\": \"string\",\n    \"timeout\": 0,\n    \"waitUntil\": [\n      \"domcontentloaded\"\n    ],\n    \"signal\": {\n      \"aborted\": true,\n      \"onabort\": {},\n      \"reason\": {}\n    }\n  },\n  \"html\": \"string\",\n  \"options\": {\n    \"scale\": 0,\n    \"displayHeaderFooter\": true,\n    \"headerTemplate\": \"string\",\n    \"footerTemplate\": \"string\",\n    \"printBackground\": true,\n    \"landscape\": true,\n    \"pageRanges\": \"string\",\n    \"format\": \"A0\",\n    \"width\": {},\n    \"height\": {},\n    \"preferCSSPageSize\": true,\n    \"margin\": {\n      \"top\": {},\n      \"bottom\": {},\n      \"left\": {},\n      \"right\": {}\n    },\n    \"path\": \"string\",\n    \"omitBackground\": true,\n    \"tagged\": true,\n    \"outline\": true,\n    \"timeout\": 0,\n    \"waitForFonts\": true\n  },\n  \"rejectRequestPattern\": [\n    \"string\"\n  ],\n  \"rejectResourceTypes\": [\n    \"cspviolationreport\"\n  ],\n  \"requestInterceptors\": [\n    {\n      \"pattern\": \"string\",\n      \"response\": {}\n    }\n  ],\n  \"setExtraHTTPHeaders\": {},\n  \"setJavaScriptEnabled\": true,\n  \"url\": \"string\",\n  \"userAgent\": \"string\",\n  \"viewport\": {\n    \"width\": 0,\n    \"height\": 0,\n    \"deviceScaleFactor\": 0,\n    \"isMobile\": true,\n    \"isLandscape\": true,\n    \"hasTouch\": true\n  },\n  \"waitForEvent\": {\n    \"event\": \"string\",\n    \"timeout\": 0\n  },\n  \"waitForFunction\": {\n    \"fn\": \"string\",\n    \"polling\": {},\n    \"timeout\": 0\n  },\n  \"waitForSelector\": {\n    \"hidden\": true,\n    \"selector\": \"string\",\n    \"timeout\": 0,\n    \"visible\": true\n  },\n  \"waitFor\": 0\n}",
    "description": "Custom body to send",
    "routing": {
      "request": {
        "body": {
          "customBody": "={{JSON.parse($value)}}"
        }
      },
      "send": {
        "preSend": [
          "${helpers.hooks.preSendActionCustonBody}"
        ]
      }
    },
    "displayOptions": {
      "show": {
        "useCustomBody": [
          true
        ],
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Pdf"
        ]
      }
    }
  },
  {
    "displayName": "Url",
    "name": "url",
    "type": "string",
    "default": "",
    "routing": {
      "request": {
        "body": {
          "url": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Pdf"
        ]
      }
    },
    "required": true
  },
  {
    "displayName": "Wait For Timeout",
    "name": "waitFor",
    "type": "number",
    "default": 0,
    "routing": {
      "request": {
        "body": {
          "waitFor": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Pdf"
        ]
      }
    }
  },
  {
    "displayName": "Wait For Selector",
    "name": "waitForSelector",
    "type": "fixedCollection",
    "default": {},
    "options": [
      {
        "name": "items",
        "displayName": "Items",
        "values": [
          {
            "type": "boolean",
            "default": true,
            "description": "",
            "name": "hidden",
            "displayName": "Hidden"
          },
          {
            "type": "string",
            "default": "",
            "description": "",
            "name": "selector",
            "displayName": "Selector"
          },
          {
            "type": "number",
            "default": 0,
            "description": "",
            "name": "timeout",
            "displayName": "Timeout"
          },
          {
            "type": "boolean",
            "default": true,
            "description": "",
            "name": "visible",
            "displayName": "Visible"
          }
        ]
      }
    ],
    "routing": {
      "request": {
        "body": {
          "waitForSelector": "={{$value.items}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Pdf"
        ]
      }
    }
  },
  {
    "displayName": "Options",
    "name": "options",
    "type": "collection",
    "default": {},
    "typeOptions": {},
    "description": "Valid options to configure PDF generation via {@link Page.pdf}",
    "placeholder": "Add item",
    "options": [
      {
        "type": "number",
        "default": 0,
        "description": "Scales the rendering of the web page. Amount must be between `0.1` and `2`",
        "name": "scale",
        "displayName": "Scale"
      },
      {
        "type": "boolean",
        "default": true,
        "description": "Whether to show the header and footer",
        "name": "displayHeaderFooter",
        "displayName": "Displayheaderfooter"
      },
      {
        "type": "string",
        "default": "",
        "description": "HTML template for the print header. Should be valid HTML with the following classes used to inject values into them: - `date` formatted print date - `title` document title - `url` document location - `pageNumber` current page number - `totalPages` total pages in the document",
        "name": "headerTemplate",
        "displayName": "Headertemplate"
      },
      {
        "type": "string",
        "default": "",
        "description": "HTML template for the print footer. Has the same constraints and support for special classes as {@link PDFOptions.headerTemplate}",
        "name": "footerTemplate",
        "displayName": "Footertemplate"
      },
      {
        "type": "boolean",
        "default": true,
        "description": "Set to `true` to print background graphics",
        "name": "printBackground",
        "displayName": "Printbackground"
      },
      {
        "type": "boolean",
        "default": true,
        "description": "Whether to print in landscape orientation",
        "name": "landscape",
        "displayName": "Landscape"
      },
      {
        "type": "string",
        "default": "",
        "description": "Paper ranges to print, e.g. `1-5, 8, 11-13`",
        "name": "pageRanges",
        "displayName": "Pageranges"
      },
      {
        "type": "options",
        "default": "A0",
        "description": "All the valid paper format types when printing a PDF",
        "options": [
          {
            "name": "A0",
            "value": "A0"
          },
          {
            "name": "A1",
            "value": "A1"
          },
          {
            "name": "A2",
            "value": "A2"
          },
          {
            "name": "A3",
            "value": "A3"
          },
          {
            "name": "A4",
            "value": "A4"
          },
          {
            "name": "A5",
            "value": "A5"
          },
          {
            "name": "A6",
            "value": "A6"
          },
          {
            "name": "LEDGER",
            "value": "LEDGER"
          },
          {
            "name": "LEGAL",
            "value": "LEGAL"
          },
          {
            "name": "LETTER",
            "value": "LETTER"
          },
          {
            "name": "Ledger",
            "value": "Ledger"
          },
          {
            "name": "Legal",
            "value": "Legal"
          },
          {
            "name": "Letter",
            "value": "Letter"
          },
          {
            "name": "TABLOID",
            "value": "TABLOID"
          },
          {
            "name": "Tabloid",
            "value": "Tabloid"
          },
          {
            "name": "a0",
            "value": "a0"
          },
          {
            "name": "a1",
            "value": "a1"
          },
          {
            "name": "a2",
            "value": "a2"
          },
          {
            "name": "a3",
            "value": "a3"
          },
          {
            "name": "a4",
            "value": "a4"
          },
          {
            "name": "a5",
            "value": "a5"
          },
          {
            "name": "a6",
            "value": "a6"
          },
          {
            "name": "ledger",
            "value": "ledger"
          },
          {
            "name": "legal",
            "value": "legal"
          },
          {
            "name": "letter",
            "value": "letter"
          },
          {
            "name": "tabloid",
            "value": "tabloid"
          }
        ],
        "name": "format",
        "displayName": "Format"
      },
      {
        "type": "string",
        "description": "Sets the width of paper. You can pass in a number or a string with a unit",
        "name": "width",
        "displayName": "Width"
      },
      {
        "type": "string",
        "description": "Sets the height of paper. You can pass in a number or a string with a unit",
        "name": "height",
        "displayName": "Height"
      },
      {
        "type": "boolean",
        "default": true,
        "description": "Give any CSS `@page` size declared in the page priority over what is declared in the `width` or `height` or `format` option",
        "name": "preferCSSPageSize",
        "displayName": "Prefercsspagesize"
      },
      {
        "type": "fixedCollection",
        "default": {},
        "description": "Set the PDF margins",
        "options": [
          {
            "name": "items",
            "displayName": "Items",
            "values": [
              {
                "type": "string",
                "description": "",
                "name": "top",
                "displayName": "Top"
              },
              {
                "type": "string",
                "description": "",
                "name": "bottom",
                "displayName": "Bottom"
              },
              {
                "type": "string",
                "description": "",
                "name": "left",
                "displayName": "Left"
              },
              {
                "type": "string",
                "description": "",
                "name": "right",
                "displayName": "Right"
              }
            ]
          }
        ],
        "name": "margin",
        "displayName": "Margin"
      },
      {
        "type": "string",
        "default": "",
        "description": "The path to save the file to",
        "name": "path",
        "displayName": "Path"
      },
      {
        "type": "boolean",
        "default": true,
        "description": "Hides default white background and allows generating pdfs with transparency",
        "name": "omitBackground",
        "displayName": "Omitbackground"
      },
      {
        "type": "boolean",
        "default": true,
        "description": "Generate tagged (accessible) PDF",
        "name": "tagged",
        "displayName": "Tagged"
      },
      {
        "type": "boolean",
        "default": true,
        "description": "Generate document outline",
        "name": "outline",
        "displayName": "Outline"
      },
      {
        "type": "number",
        "default": 0,
        "description": "Timeout in milliseconds. Pass `0` to disable timeout. The default value can be changed by using {@link Page.setDefaultTimeout}",
        "name": "timeout",
        "displayName": "Timeout"
      },
      {
        "type": "boolean",
        "default": true,
        "description": "If true, waits for `document.fonts.ready` to resolve. This might require activating the page using {@link Page.bringToFront} if the page is in the background",
        "name": "waitForFonts",
        "displayName": "Waitforfonts"
      }
    ],
    "routing": {
      "request": {
        "body": {
          "options": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Pdf"
        ]
      }
    }
  },
  {
    "displayName": "Goto Options",
    "name": "gotoOptions",
    "type": "fixedCollection",
    "default": {},
    "options": [
      {
        "name": "items",
        "displayName": "Items",
        "values": [
          {
            "type": "string",
            "default": "",
            "description": "If provided, it will take preference over the referer header value set by {@link Page.setExtraHTTPHeaderspage.setExtraHTTPHeaders()}",
            "name": "referer",
            "displayName": "Referer"
          },
          {
            "type": "string",
            "default": "",
            "description": "If provided, it will take preference over the referer-policy header value set by {@link Page.setExtraHTTPHeaderspage.setExtraHTTPHeaders()}",
            "name": "referrerPolicy",
            "displayName": "Referrerpolicy"
          },
          {
            "type": "number",
            "default": 0,
            "description": "Maximum wait time in milliseconds. Pass 0 to disable the timeout. The default value can be changed by using the {@link Page.setDefaultTimeout} or {@link Page.setDefaultNavigationTimeout} methods",
            "name": "timeout",
            "displayName": "Timeout"
          },
          {
            "type": "multiOptions",
            "default": [],
            "description": "When to consider waiting succeeds. Given an array of event strings, waiting is considered to be successful after all events have been fired",
            "options": [
              {
                "name": "domcontentloaded",
                "value": "domcontentloaded"
              },
              {
                "name": "load",
                "value": "load"
              },
              {
                "name": "networkidle0",
                "value": "networkidle0"
              },
              {
                "name": "networkidle2",
                "value": "networkidle2"
              }
            ],
            "name": "waitUntil",
            "displayName": "Waituntil"
          },
          {
            "type": "fixedCollection",
            "default": {},
            "description": "A signal object that allows you to cancel the call",
            "options": [
              {
                "name": "items",
                "displayName": "Items",
                "values": [
                  {
                    "type": "boolean",
                    "default": true,
                    "description": "",
                    "name": "aborted",
                    "displayName": "Aborted"
                  },
                  {
                    "type": "json",
                    "default": "{}",
                    "description": "",
                    "name": "onabort",
                    "displayName": "Onabort"
                  },
                  {
                    "type": "string",
                    "default": "",
                    "description": "",
                    "name": "reason",
                    "displayName": "Reason"
                  }
                ]
              }
            ],
            "name": "signal",
            "displayName": "Signal"
          }
        ]
      }
    ],
    "routing": {
      "request": {
        "body": {
          "gotoOptions": "={{$value.items}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Pdf"
        ]
      }
    }
  },
  {
    "displayName": "Wait For Event",
    "name": "waitForEvent",
    "type": "fixedCollection",
    "default": {},
    "options": [
      {
        "name": "items",
        "displayName": "Items",
        "values": [
          {
            "type": "string",
            "default": "",
            "description": "",
            "name": "event",
            "displayName": "Event"
          },
          {
            "type": "number",
            "default": 0,
            "description": "",
            "name": "timeout",
            "displayName": "Timeout"
          }
        ]
      }
    ],
    "routing": {
      "request": {
        "body": {
          "waitForEvent": "={{$value.items}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Pdf"
        ]
      }
    }
  },
  {
    "displayName": "Wait For Function",
    "name": "waitForFunction",
    "type": "fixedCollection",
    "default": {},
    "options": [
      {
        "name": "items",
        "displayName": "Items",
        "values": [
          {
            "type": "string",
            "default": "",
            "description": "The function, or statement, to be evaluated in browser context",
            "name": "fn",
            "displayName": "Fn"
          },
          {
            "type": "string",
            "description": "An interval at which the pageFunction is executed, defaults to raf. If polling is a number, then it is treated as an interval in milliseconds at which the function would be executed. If polling is a string, then it can be one of the following values: \"raf\" or \"mutation\"",
            "name": "polling",
            "displayName": "Polling"
          },
          {
            "type": "number",
            "default": 0,
            "description": "Maximum time to wait for in milliseconds. Defaults to 30000 (30 seconds). Pass 0 to disable timeout",
            "name": "timeout",
            "displayName": "Timeout"
          }
        ]
      }
    ],
    "routing": {
      "request": {
        "body": {
          "waitForFunction": "={{$value.items}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Pdf"
        ]
      }
    }
  },
  {
    "displayName": "Add Script Tag",
    "name": "addScriptTag",
    "type": "fixedCollection",
    "default": [],
    "typeOptions": {
      "multipleValues": true
    },
    "description": "",
    "placeholder": "Add item",
    "options": [
      {
        "name": "items",
        "displayName": "Items",
        "values": [
          {
            "type": "string",
            "default": "",
            "description": "URL of the script to be added",
            "name": "url",
            "displayName": "Url"
          },
          {
            "type": "string",
            "default": "",
            "description": "Path to a JavaScript file to be injected into the frame",
            "name": "path",
            "displayName": "Path"
          },
          {
            "type": "string",
            "default": "",
            "description": "JavaScript to be injected into the frame",
            "name": "content",
            "displayName": "Content"
          },
          {
            "type": "string",
            "default": "",
            "description": "Sets the `type` of the script. Use `module` in order to load an ES2015 module",
            "name": "type",
            "displayName": "Type"
          },
          {
            "type": "string",
            "default": "",
            "description": "Sets the `id` of the script",
            "name": "id",
            "displayName": "Id"
          }
        ]
      }
    ],
    "routing": {
      "request": {
        "body": {
          "addScriptTag": "={{$value.items}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Pdf"
        ]
      }
    }
  },
  {
    "displayName": "Add Style Tag",
    "name": "addStyleTag",
    "type": "fixedCollection",
    "default": [],
    "typeOptions": {
      "multipleValues": true
    },
    "description": "",
    "placeholder": "Add item",
    "options": [
      {
        "name": "items",
        "displayName": "Items",
        "values": [
          {
            "type": "string",
            "default": "",
            "description": "the URL of the CSS file to be added",
            "name": "url",
            "displayName": "Url"
          },
          {
            "type": "string",
            "default": "",
            "description": "The path to a CSS file to be injected into the frame",
            "name": "path",
            "displayName": "Path"
          },
          {
            "type": "string",
            "default": "",
            "description": "Raw CSS content to be injected into the frame",
            "name": "content",
            "displayName": "Content"
          }
        ]
      }
    ],
    "routing": {
      "request": {
        "body": {
          "addStyleTag": "={{$value.items}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Pdf"
        ]
      }
    }
  },
  {
    "displayName": "Set Extra HTTP Headers",
    "name": "setExtraHTTPHeaders",
    "type": "fixedCollection",
    "default": {},
    "description": "Set extra HTTP headers",
    "routing": {
      "request": {
        "body": {
          "setExtraHTTPHeaders": "={{$value.headers}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Pdf"
        ]
      }
    },
    "placeholder": "Add Header",
    "typeOptions": {
      "multipleValues": true
    },
    "options": [
      {
        "displayName": "Set Extra HTTP Headers",
        "name": "headers",
        "values": [
          {
            "displayName": "Name",
            "name": "name",
            "type": "string",
            "default": "",
            "description": "Name of the header"
          },
          {
            "displayName": "Value",
            "name": "value",
            "type": "string",
            "default": "",
            "description": "Value of the header"
          }
        ]
      }
    ]
  },
  {
    "displayName": "Authenticate",
    "name": "authenticate",
    "type": "fixedCollection",
    "default": {},
    "options": [
      {
        "name": "items",
        "displayName": "Items",
        "values": [
          {
            "type": "string",
            "default": "",
            "description": "",
            "name": "username",
            "displayName": "Username"
          },
          {
            "type": "string",
            "default": "",
            "description": "",
            "name": "password",
            "displayName": "Password"
          }
        ]
      }
    ],
    "routing": {
      "request": {
        "body": {
          "authenticate": "={{$value.items}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Pdf"
        ]
      }
    }
  },
  {
    "displayName": "Viewport",
    "name": "viewport",
    "type": "fixedCollection",
    "default": {},
    "options": [
      {
        "name": "items",
        "displayName": "Items",
        "values": [
          {
            "type": "number",
            "default": 0,
            "description": "The page width in CSS pixels",
            "name": "width",
            "displayName": "Width"
          },
          {
            "type": "number",
            "default": 0,
            "description": "The page height in CSS pixels",
            "name": "height",
            "displayName": "Height"
          },
          {
            "type": "number",
            "default": 0,
            "description": "Specify device scale factor. See {@link https://developer.mozilla.org/en-US/docs/Web/API/Window/devicePixelRatio devicePixelRatio} for more info",
            "name": "deviceScaleFactor",
            "displayName": "Devicescalefactor"
          },
          {
            "type": "boolean",
            "default": true,
            "description": "Whether the `meta viewport` tag is taken into account",
            "name": "isMobile",
            "displayName": "Ismobile"
          },
          {
            "type": "boolean",
            "default": true,
            "description": "Specifies if the viewport is in landscape mode",
            "name": "isLandscape",
            "displayName": "Islandscape"
          },
          {
            "type": "boolean",
            "default": true,
            "description": "Specify if the viewport supports touch events",
            "name": "hasTouch",
            "displayName": "Hastouch"
          }
        ]
      }
    ],
    "routing": {
      "request": {
        "body": {
          "viewport": "={{$value.items}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Pdf"
        ]
      }
    }
  },
  {
    "displayName": "Emulate Media Type",
    "name": "emulateMediaType",
    "type": "string",
    "default": "",
    "routing": {
      "request": {
        "body": {
          "emulateMediaType": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Pdf"
        ]
      }
    }
  },
  {
    "displayName": "Timeout",
    "name": "timeout",
    "description": "Override the system-level timeout for this request. Accepts a value in milliseconds",
    "default": 0,
    "type": "number",
    "routing": {
      "request": {
        "qs": {
          "timeout": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Pdf"
        ]
      }
    }
  },
  {
    "displayName": "Html",
    "name": "html",
    "type": "string",
    "default": "",
    "routing": {
      "request": {
        "body": {
          "html": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Pdf"
        ]
      }
    }
  },
  {
    "displayName": "User Agent",
    "name": "userAgent",
    "type": "string",
    "default": "",
    "routing": {
      "request": {
        "body": {
          "userAgent": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Pdf"
        ]
      }
    }
  },
  {
    "displayName": "Best Attempt",
    "name": "bestAttempt",
    "type": "boolean",
    "default": true,
    "description": "When bestAttempt is set to true, browserless attempt to proceed when \"awaited\" events fail or timeout. This includes things like goto, waitForSelector, and more",
    "routing": {
      "request": {
        "body": {
          "bestAttempt": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Pdf"
        ]
      }
    }
  },
  {
    "name": "enableCookies",
    "displayName": "Enable Cookies",
    "type": "boolean",
    "default": false,
    "description": "Enable cookies",
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Pdf"
        ]
      }
    }
  },
  {
    "displayName": "Cookies",
    "name": "cookies",
    "type": "json",
    "default": "[]",
    "typeOptions": {},
    "description": "Array of cookie objects expected by cookie-editor extension",
    "placeholder": "Add item",
    "options": [],
    "routing": {
      "request": {
        "body": {
          "cookies": "={{ (JSON.parse($value) || []).reduce((a, c) => ({ ...a, [c.name]: c.value }), {}) }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Pdf"
        ],
        "enableCookies": [
          true
        ]
      }
    }
  },
  {
    "displayName": "Block Ads",
    "name": "blockAds",
    "description": "Whether or nor to load ad-blocking extensions for the session. This currently uses uBlock Origin and may cause certain sites to not load properly",
    "default": true,
    "type": "boolean",
    "routing": {
      "request": {
        "qs": {
          "blockAds": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Pdf"
        ]
      }
    }
  },
  {
    "displayName": "Set Java Script Enabled",
    "name": "setJavaScriptEnabled",
    "type": "boolean",
    "default": true,
    "routing": {
      "request": {
        "body": {
          "setJavaScriptEnabled": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Pdf"
        ]
      }
    }
  },
  {
    "name": "enableLaunch",
    "displayName": "Enable Launch",
    "type": "boolean",
    "default": false,
    "description": "Launch a new browser instance",
    "displayOptions": {
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Pdf"
        ]
      }
    }
  },
  {
    "displayName": "Launch",
    "name": "launch",
    "description": "",
    "default": {},
    "type": "collection",
    "typeOptions": {},
    "placeholder": "Add item",
    "options": [
      {
        "type": "fixedCollection",
        "default": [],
        "typeOptions": {
          "multipleValues": true
        },
        "displayName": "Args",
        "name": "args",
        "description": "",
        "placeholder": "Add item",
        "options": [
          {
            "name": "items",
            "displayName": "Items",
            "values": [
              {
                "name": "Item",
                "displayName": "Item",
                "type": "string",
                "default": ""
              }
            ]
          }
        ]
      },
      {
        "type": "fixedCollection",
        "default": {},
        "description": "",
        "options": [
          {
            "name": "items",
            "displayName": "Items",
            "values": [
              {
                "type": "number",
                "default": 0,
                "description": "",
                "name": "deviceScaleFactor",
                "displayName": "Devicescalefactor"
              },
              {
                "type": "boolean",
                "default": true,
                "description": "",
                "name": "hasTouch",
                "displayName": "Hastouch"
              },
              {
                "type": "number",
                "default": 0,
                "description": "",
                "name": "height",
                "displayName": "Height"
              },
              {
                "type": "boolean",
                "default": true,
                "description": "",
                "name": "isLandscape",
                "displayName": "Islandscape"
              },
              {
                "type": "boolean",
                "default": true,
                "description": "",
                "name": "isMobile",
                "displayName": "Ismobile"
              },
              {
                "type": "number",
                "default": 0,
                "description": "",
                "name": "width",
                "displayName": "Width"
              }
            ]
          }
        ],
        "name": "defaultViewport",
        "displayName": "Defaultviewport"
      },
      {
        "type": "boolean",
        "default": true,
        "description": "",
        "name": "devtools",
        "displayName": "Devtools"
      },
      {
        "type": "boolean",
        "default": true,
        "description": "",
        "name": "dumpio",
        "displayName": "Dumpio"
      },
      {
        "type": "options",
        "default": false,
        "description": "",
        "options": [
          {
            "name": "False",
            "value": false
          },
          {
            "name": "Shell",
            "value": "shell"
          },
          {
            "name": "True",
            "value": true
          }
        ],
        "name": "headless",
        "displayName": "Headless"
      },
      {
        "type": "fixedCollection",
        "default": [],
        "typeOptions": {
          "multipleValues": true
        },
        "displayName": "Ignoredefaultargs",
        "name": "ignoreDefaultArgs",
        "description": "",
        "placeholder": "Add item",
        "options": [
          {
            "name": "items",
            "displayName": "Items",
            "values": [
              {
                "name": "Item",
                "displayName": "Item",
                "type": "string",
                "default": ""
              }
            ]
          }
        ]
      },
      {
        "type": "boolean",
        "default": true,
        "description": "",
        "name": "ignoreHTTPSErrors",
        "displayName": "Ignorehttpserrors"
      },
      {
        "type": "number",
        "default": 0,
        "description": "",
        "name": "slowMo",
        "displayName": "Slowmo"
      },
      {
        "type": "boolean",
        "default": true,
        "description": "",
        "name": "stealth",
        "displayName": "Stealth"
      },
      {
        "type": "number",
        "default": 0,
        "description": "",
        "name": "timeout",
        "displayName": "Timeout"
      },
      {
        "type": "string",
        "default": "",
        "description": "",
        "name": "userDataDir",
        "displayName": "Userdatadir"
      },
      {
        "type": "boolean",
        "default": true,
        "description": "",
        "name": "waitForInitialPage",
        "displayName": "Waitforinitialpage"
      }
    ],
    "routing": {
      "request": {
        "qs": {
          "launch": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Pdf"
        ],
        "enableLaunch": [
          true
        ]
      }
    }
  },
  {
    "displayName": "Reject Resource Types",
    "name": "rejectResourceTypes",
    "type": "multiOptions",
    "default": [],
    "options": [
      {
        "name": "cspviolationreport",
        "value": "cspviolationreport"
      },
      {
        "name": "document",
        "value": "document"
      },
      {
        "name": "eventsource",
        "value": "eventsource"
      },
      {
        "name": "fetch",
        "value": "fetch"
      },
      {
        "name": "font",
        "value": "font"
      },
      {
        "name": "image",
        "value": "image"
      },
      {
        "name": "manifest",
        "value": "manifest"
      },
      {
        "name": "media",
        "value": "media"
      },
      {
        "name": "other",
        "value": "other"
      },
      {
        "name": "ping",
        "value": "ping"
      },
      {
        "name": "prefetch",
        "value": "prefetch"
      },
      {
        "name": "preflight",
        "value": "preflight"
      },
      {
        "name": "script",
        "value": "script"
      },
      {
        "name": "signedexchange",
        "value": "signedexchange"
      },
      {
        "name": "stylesheet",
        "value": "stylesheet"
      },
      {
        "name": "texttrack",
        "value": "texttrack"
      },
      {
        "name": "websocket",
        "value": "websocket"
      },
      {
        "name": "xhr",
        "value": "xhr"
      }
    ],
    "routing": {
      "request": {
        "body": {
          "rejectResourceTypes": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Pdf"
        ]
      }
    }
  },
  {
    "displayName": "Reject Request Pattern",
    "name": "rejectRequestPattern",
    "type": "fixedCollection",
    "default": [],
    "typeOptions": {
      "multipleValues": true
    },
    "description": "",
    "placeholder": "Add item",
    "options": [
      {
        "name": "items",
        "displayName": "Items",
        "values": [
          {
            "name": "Item",
            "displayName": "Item",
            "type": "string",
            "default": ""
          }
        ]
      }
    ],
    "routing": {
      "request": {
        "body": {
          "rejectRequestPattern": "={{$value.items}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Pdf"
        ]
      }
    }
  },
  {
    "displayName": "Request Interceptors",
    "name": "requestInterceptors",
    "type": "fixedCollection",
    "default": [],
    "typeOptions": {
      "multipleValues": true
    },
    "description": "",
    "placeholder": "Add item",
    "options": [
      {
        "name": "items",
        "displayName": "Items",
        "values": [
          {
            "type": "string",
            "default": "",
            "description": "An array of patterns (using `req.url().match(r.pattern)` to match) and their corresponding responses to use in order to fulfill those requests",
            "name": "pattern",
            "displayName": "Pattern"
          },
          {
            "type": "fixedCollection",
            "default": {},
            "description": "",
            "options": [
              {
                "name": "items",
                "displayName": "Items",
                "values": [
                  {
                    "type": "number",
                    "default": 0,
                    "description": "",
                    "name": "status",
                    "displayName": "Status"
                  },
                  {
                    "type": "json",
                    "default": "{}",
                    "description": "Optional response headers. All values are converted to strings",
                    "name": "headers",
                    "displayName": "Headers"
                  },
                  {
                    "type": "string",
                    "default": "",
                    "description": "",
                    "name": "contentType",
                    "displayName": "Contenttype"
                  },
                  {
                    "type": "fixedCollection",
                    "default": {},
                    "description": "",
                    "options": [
                      {
                        "name": "items",
                        "displayName": "Items",
                        "values": [
                          {
                            "type": "number",
                            "default": 0,
                            "description": "",
                            "name": "BYTES_PER_ELEMENT",
                            "displayName": "Bytes Per Element"
                          },
                          {
                            "type": "string",
                            "default": {},
                            "description": "",
                            "name": "buffer",
                            "displayName": "Buffer"
                          },
                          {
                            "type": "number",
                            "default": 0,
                            "description": "",
                            "name": "byteLength",
                            "displayName": "Bytelength"
                          },
                          {
                            "type": "number",
                            "default": 0,
                            "description": "",
                            "name": "byteOffset",
                            "displayName": "Byteoffset"
                          },
                          {
                            "type": "number",
                            "default": 0,
                            "description": "",
                            "name": "length",
                            "displayName": "Length"
                          },
                          {
                            "type": "string",
                            "default": "",
                            "description": "",
                            "name": "__@toStringTag@42114",
                            "displayName": "Tostringtag 42114"
                          }
                        ]
                      }
                    ],
                    "name": "body",
                    "displayName": "Body"
                  }
                ]
              }
            ],
            "name": "response",
            "displayName": "Response"
          }
        ]
      }
    ],
    "routing": {
      "request": {
        "body": {
          "requestInterceptors": "={{$value.items}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Pdf"
        ]
      }
    }
  },
  {
    "displayName": "POST /screenshot",
    "name": "operation",
    "type": "notice",
    "typeOptions": {
      "theme": "info"
    },
    "default": "",
    "displayOptions": {
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Screenshot"
        ]
      }
    }
  },
  {
    "displayName": "Scroll Page",
    "name": "scrollPage",
    "type": "boolean",
    "default": true,
    "routing": {
      "request": {
        "body": {
          "scrollPage": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Screenshot"
        ]
      }
    }
  },
  {
    "displayName": "Custom Body",
    "name": "customBody",
    "type": "json",
    "default": "{\n  \"addScriptTag\": [\n    {\n      \"url\": \"string\",\n      \"path\": \"string\",\n      \"content\": \"string\",\n      \"type\": \"string\",\n      \"id\": \"string\"\n    }\n  ],\n  \"addStyleTag\": [\n    {\n      \"url\": \"string\",\n      \"path\": \"string\",\n      \"content\": \"string\"\n    }\n  ],\n  \"authenticate\": {\n    \"username\": \"string\",\n    \"password\": \"string\"\n  },\n  \"bestAttempt\": true,\n  \"cookies\": [\n    {\n      \"name\": \"string\",\n      \"value\": \"string\",\n      \"url\": \"string\",\n      \"domain\": \"string\",\n      \"path\": \"string\",\n      \"secure\": true,\n      \"httpOnly\": true,\n      \"sameSite\": \"Lax\",\n      \"expires\": 0,\n      \"priority\": \"High\",\n      \"sameParty\": true,\n      \"sourceScheme\": \"NonSecure\",\n      \"partitionKey\": \"string\"\n    }\n  ],\n  \"emulateMediaType\": \"string\",\n  \"gotoOptions\": {\n    \"referer\": \"string\",\n    \"referrerPolicy\": \"string\",\n    \"timeout\": 0,\n    \"waitUntil\": [\n      \"domcontentloaded\"\n    ],\n    \"signal\": {\n      \"aborted\": true,\n      \"onabort\": {},\n      \"reason\": {}\n    }\n  },\n  \"html\": \"string\",\n  \"options\": {\n    \"optimizeForSpeed\": true,\n    \"type\": \"jpeg\",\n    \"quality\": 0,\n    \"fromSurface\": true,\n    \"fullPage\": true,\n    \"omitBackground\": true,\n    \"path\": \"string\",\n    \"clip\": {\n      \"scale\": 0,\n      \"width\": 0,\n      \"height\": 0,\n      \"x\": 0,\n      \"y\": 0\n    },\n    \"encoding\": \"base64\",\n    \"captureBeyondViewport\": true\n  },\n  \"rejectRequestPattern\": [\n    \"string\"\n  ],\n  \"rejectResourceTypes\": [\n    \"cspviolationreport\"\n  ],\n  \"requestInterceptors\": [\n    {\n      \"pattern\": \"string\",\n      \"response\": {}\n    }\n  ],\n  \"scrollPage\": true,\n  \"selector\": \"string\",\n  \"setExtraHTTPHeaders\": {},\n  \"setJavaScriptEnabled\": true,\n  \"url\": \"string\",\n  \"userAgent\": \"string\",\n  \"viewport\": {\n    \"width\": 0,\n    \"height\": 0,\n    \"deviceScaleFactor\": 0,\n    \"isMobile\": true,\n    \"isLandscape\": true,\n    \"hasTouch\": true\n  },\n  \"waitForEvent\": {\n    \"event\": \"string\",\n    \"timeout\": 0\n  },\n  \"waitForFunction\": {\n    \"fn\": \"string\",\n    \"polling\": {},\n    \"timeout\": 0\n  },\n  \"waitForSelector\": {\n    \"hidden\": true,\n    \"selector\": \"string\",\n    \"timeout\": 0,\n    \"visible\": true\n  },\n  \"waitFor\": 0\n}",
    "description": "Custom body to send",
    "routing": {
      "request": {
        "body": {
          "customBody": "={{JSON.parse($value)}}"
        }
      },
      "send": {
        "preSend": [
          "${helpers.hooks.preSendActionCustonBody}"
        ]
      }
    },
    "displayOptions": {
      "show": {
        "useCustomBody": [
          true
        ],
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Screenshot"
        ]
      }
    }
  },
  {
    "displayName": "Url",
    "name": "url",
    "type": "string",
    "default": "",
    "routing": {
      "request": {
        "body": {
          "url": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Screenshot"
        ]
      }
    },
    "required": true
  },
  {
    "displayName": "Selector",
    "name": "selector",
    "type": "string",
    "default": "",
    "routing": {
      "request": {
        "body": {
          "selector": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Screenshot"
        ]
      }
    }
  },
  {
    "displayName": "Wait For Timeout",
    "name": "waitFor",
    "type": "number",
    "default": 0,
    "routing": {
      "request": {
        "body": {
          "waitFor": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Screenshot"
        ]
      }
    }
  },
  {
    "displayName": "Wait For Selector",
    "name": "waitForSelector",
    "type": "fixedCollection",
    "default": {},
    "options": [
      {
        "name": "items",
        "displayName": "Items",
        "values": [
          {
            "type": "boolean",
            "default": true,
            "description": "",
            "name": "hidden",
            "displayName": "Hidden"
          },
          {
            "type": "string",
            "default": "",
            "description": "",
            "name": "selector",
            "displayName": "Selector"
          },
          {
            "type": "number",
            "default": 0,
            "description": "",
            "name": "timeout",
            "displayName": "Timeout"
          },
          {
            "type": "boolean",
            "default": true,
            "description": "",
            "name": "visible",
            "displayName": "Visible"
          }
        ]
      }
    ],
    "routing": {
      "request": {
        "body": {
          "waitForSelector": "={{$value.items}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Screenshot"
        ]
      }
    }
  },
  {
    "displayName": "Options",
    "name": "options",
    "type": "collection",
    "default": {},
    "typeOptions": {},
    "description": "",
    "placeholder": "Add item",
    "options": [
      {
        "type": "boolean",
        "default": true,
        "description": "",
        "name": "optimizeForSpeed",
        "displayName": "Optimizeforspeed"
      },
      {
        "type": "options",
        "default": "jpeg",
        "description": "",
        "options": [
          {
            "name": "jpeg",
            "value": "jpeg"
          },
          {
            "name": "png",
            "value": "png"
          },
          {
            "name": "webp",
            "value": "webp"
          }
        ],
        "name": "type",
        "displayName": "Type"
      },
      {
        "type": "number",
        "default": 0,
        "description": "Quality of the image, between 0-100. Not applicable to `png` images",
        "name": "quality",
        "displayName": "Quality"
      },
      {
        "type": "boolean",
        "default": true,
        "description": "Capture the screenshot from the surface, rather than the view",
        "name": "fromSurface",
        "displayName": "Fromsurface"
      },
      {
        "type": "boolean",
        "default": true,
        "description": "When `true`, takes a screenshot of the full page",
        "name": "fullPage",
        "displayName": "Fullpage"
      },
      {
        "type": "boolean",
        "default": true,
        "description": "Hides default white background and allows capturing screenshots with transparency",
        "name": "omitBackground",
        "displayName": "Omitbackground"
      },
      {
        "type": "string",
        "default": "",
        "description": "The file path to save the image to. The screenshot type will be inferred from file extension. If path is a relative path, then it is resolved relative to current working directory. If no path is provided, the image won't be saved to the disk",
        "name": "path",
        "displayName": "Path"
      },
      {
        "type": "fixedCollection",
        "default": {},
        "description": "Specifies the region of the page/element to clip",
        "options": [
          {
            "name": "items",
            "displayName": "Items",
            "values": [
              {
                "type": "number",
                "default": 0,
                "description": "",
                "name": "scale",
                "displayName": "Scale"
              },
              {
                "type": "number",
                "default": 0,
                "description": "the width of the element in pixels",
                "name": "width",
                "displayName": "Width"
              },
              {
                "type": "number",
                "default": 0,
                "description": "the height of the element in pixels",
                "name": "height",
                "displayName": "Height"
              },
              {
                "type": "number",
                "default": 0,
                "description": "",
                "name": "x",
                "displayName": "X"
              },
              {
                "type": "number",
                "default": 0,
                "description": "",
                "name": "y",
                "displayName": "Y"
              }
            ]
          }
        ],
        "name": "clip",
        "displayName": "Clip"
      },
      {
        "type": "options",
        "default": "base64",
        "description": "Encoding of the image",
        "options": [
          {
            "name": "base64",
            "value": "base64"
          },
          {
            "name": "binary",
            "value": "binary"
          }
        ],
        "name": "encoding",
        "displayName": "Encoding"
      },
      {
        "type": "boolean",
        "default": true,
        "description": "Capture the screenshot beyond the viewport",
        "name": "captureBeyondViewport",
        "displayName": "Capturebeyondviewport"
      }
    ],
    "routing": {
      "request": {
        "body": {
          "options": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Screenshot"
        ]
      }
    }
  },
  {
    "displayName": "Goto Options",
    "name": "gotoOptions",
    "type": "fixedCollection",
    "default": {},
    "options": [
      {
        "name": "items",
        "displayName": "Items",
        "values": [
          {
            "type": "string",
            "default": "",
            "description": "If provided, it will take preference over the referer header value set by {@link Page.setExtraHTTPHeaderspage.setExtraHTTPHeaders()}",
            "name": "referer",
            "displayName": "Referer"
          },
          {
            "type": "string",
            "default": "",
            "description": "If provided, it will take preference over the referer-policy header value set by {@link Page.setExtraHTTPHeaderspage.setExtraHTTPHeaders()}",
            "name": "referrerPolicy",
            "displayName": "Referrerpolicy"
          },
          {
            "type": "number",
            "default": 0,
            "description": "Maximum wait time in milliseconds. Pass 0 to disable the timeout. The default value can be changed by using the {@link Page.setDefaultTimeout} or {@link Page.setDefaultNavigationTimeout} methods",
            "name": "timeout",
            "displayName": "Timeout"
          },
          {
            "type": "multiOptions",
            "default": [],
            "description": "When to consider waiting succeeds. Given an array of event strings, waiting is considered to be successful after all events have been fired",
            "options": [
              {
                "name": "domcontentloaded",
                "value": "domcontentloaded"
              },
              {
                "name": "load",
                "value": "load"
              },
              {
                "name": "networkidle0",
                "value": "networkidle0"
              },
              {
                "name": "networkidle2",
                "value": "networkidle2"
              }
            ],
            "name": "waitUntil",
            "displayName": "Waituntil"
          },
          {
            "type": "fixedCollection",
            "default": {},
            "description": "A signal object that allows you to cancel the call",
            "options": [
              {
                "name": "items",
                "displayName": "Items",
                "values": [
                  {
                    "type": "boolean",
                    "default": true,
                    "description": "",
                    "name": "aborted",
                    "displayName": "Aborted"
                  },
                  {
                    "type": "json",
                    "default": "{}",
                    "description": "",
                    "name": "onabort",
                    "displayName": "Onabort"
                  },
                  {
                    "type": "string",
                    "default": "",
                    "description": "",
                    "name": "reason",
                    "displayName": "Reason"
                  }
                ]
              }
            ],
            "name": "signal",
            "displayName": "Signal"
          }
        ]
      }
    ],
    "routing": {
      "request": {
        "body": {
          "gotoOptions": "={{$value.items}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Screenshot"
        ]
      }
    }
  },
  {
    "displayName": "Wait For Event",
    "name": "waitForEvent",
    "type": "fixedCollection",
    "default": {},
    "options": [
      {
        "name": "items",
        "displayName": "Items",
        "values": [
          {
            "type": "string",
            "default": "",
            "description": "",
            "name": "event",
            "displayName": "Event"
          },
          {
            "type": "number",
            "default": 0,
            "description": "",
            "name": "timeout",
            "displayName": "Timeout"
          }
        ]
      }
    ],
    "routing": {
      "request": {
        "body": {
          "waitForEvent": "={{$value.items}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Screenshot"
        ]
      }
    }
  },
  {
    "displayName": "Wait For Function",
    "name": "waitForFunction",
    "type": "fixedCollection",
    "default": {},
    "options": [
      {
        "name": "items",
        "displayName": "Items",
        "values": [
          {
            "type": "string",
            "default": "",
            "description": "The function, or statement, to be evaluated in browser context",
            "name": "fn",
            "displayName": "Fn"
          },
          {
            "type": "string",
            "description": "An interval at which the pageFunction is executed, defaults to raf. If polling is a number, then it is treated as an interval in milliseconds at which the function would be executed. If polling is a string, then it can be one of the following values: \"raf\" or \"mutation\"",
            "name": "polling",
            "displayName": "Polling"
          },
          {
            "type": "number",
            "default": 0,
            "description": "Maximum time to wait for in milliseconds. Defaults to 30000 (30 seconds). Pass 0 to disable timeout",
            "name": "timeout",
            "displayName": "Timeout"
          }
        ]
      }
    ],
    "routing": {
      "request": {
        "body": {
          "waitForFunction": "={{$value.items}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Screenshot"
        ]
      }
    }
  },
  {
    "displayName": "Add Script Tag",
    "name": "addScriptTag",
    "type": "fixedCollection",
    "default": [],
    "typeOptions": {
      "multipleValues": true
    },
    "description": "",
    "placeholder": "Add item",
    "options": [
      {
        "name": "items",
        "displayName": "Items",
        "values": [
          {
            "type": "string",
            "default": "",
            "description": "URL of the script to be added",
            "name": "url",
            "displayName": "Url"
          },
          {
            "type": "string",
            "default": "",
            "description": "Path to a JavaScript file to be injected into the frame",
            "name": "path",
            "displayName": "Path"
          },
          {
            "type": "string",
            "default": "",
            "description": "JavaScript to be injected into the frame",
            "name": "content",
            "displayName": "Content"
          },
          {
            "type": "string",
            "default": "",
            "description": "Sets the `type` of the script. Use `module` in order to load an ES2015 module",
            "name": "type",
            "displayName": "Type"
          },
          {
            "type": "string",
            "default": "",
            "description": "Sets the `id` of the script",
            "name": "id",
            "displayName": "Id"
          }
        ]
      }
    ],
    "routing": {
      "request": {
        "body": {
          "addScriptTag": "={{$value.items}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Screenshot"
        ]
      }
    }
  },
  {
    "displayName": "Add Style Tag",
    "name": "addStyleTag",
    "type": "fixedCollection",
    "default": [],
    "typeOptions": {
      "multipleValues": true
    },
    "description": "",
    "placeholder": "Add item",
    "options": [
      {
        "name": "items",
        "displayName": "Items",
        "values": [
          {
            "type": "string",
            "default": "",
            "description": "the URL of the CSS file to be added",
            "name": "url",
            "displayName": "Url"
          },
          {
            "type": "string",
            "default": "",
            "description": "The path to a CSS file to be injected into the frame",
            "name": "path",
            "displayName": "Path"
          },
          {
            "type": "string",
            "default": "",
            "description": "Raw CSS content to be injected into the frame",
            "name": "content",
            "displayName": "Content"
          }
        ]
      }
    ],
    "routing": {
      "request": {
        "body": {
          "addStyleTag": "={{$value.items}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Screenshot"
        ]
      }
    }
  },
  {
    "displayName": "Set Extra HTTP Headers",
    "name": "setExtraHTTPHeaders",
    "type": "fixedCollection",
    "default": {},
    "description": "Set extra HTTP headers",
    "routing": {
      "request": {
        "body": {
          "setExtraHTTPHeaders": "={{$value.headers}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Screenshot"
        ]
      }
    },
    "placeholder": "Add Header",
    "typeOptions": {
      "multipleValues": true
    },
    "options": [
      {
        "displayName": "Set Extra HTTP Headers",
        "name": "headers",
        "values": [
          {
            "displayName": "Name",
            "name": "name",
            "type": "string",
            "default": "",
            "description": "Name of the header"
          },
          {
            "displayName": "Value",
            "name": "value",
            "type": "string",
            "default": "",
            "description": "Value of the header"
          }
        ]
      }
    ]
  },
  {
    "displayName": "Authenticate",
    "name": "authenticate",
    "type": "fixedCollection",
    "default": {},
    "options": [
      {
        "name": "items",
        "displayName": "Items",
        "values": [
          {
            "type": "string",
            "default": "",
            "description": "",
            "name": "username",
            "displayName": "Username"
          },
          {
            "type": "string",
            "default": "",
            "description": "",
            "name": "password",
            "displayName": "Password"
          }
        ]
      }
    ],
    "routing": {
      "request": {
        "body": {
          "authenticate": "={{$value.items}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Screenshot"
        ]
      }
    }
  },
  {
    "displayName": "Viewport",
    "name": "viewport",
    "type": "fixedCollection",
    "default": {},
    "options": [
      {
        "name": "items",
        "displayName": "Items",
        "values": [
          {
            "type": "number",
            "default": 0,
            "description": "The page width in CSS pixels",
            "name": "width",
            "displayName": "Width"
          },
          {
            "type": "number",
            "default": 0,
            "description": "The page height in CSS pixels",
            "name": "height",
            "displayName": "Height"
          },
          {
            "type": "number",
            "default": 0,
            "description": "Specify device scale factor. See {@link https://developer.mozilla.org/en-US/docs/Web/API/Window/devicePixelRatio devicePixelRatio} for more info",
            "name": "deviceScaleFactor",
            "displayName": "Devicescalefactor"
          },
          {
            "type": "boolean",
            "default": true,
            "description": "Whether the `meta viewport` tag is taken into account",
            "name": "isMobile",
            "displayName": "Ismobile"
          },
          {
            "type": "boolean",
            "default": true,
            "description": "Specifies if the viewport is in landscape mode",
            "name": "isLandscape",
            "displayName": "Islandscape"
          },
          {
            "type": "boolean",
            "default": true,
            "description": "Specify if the viewport supports touch events",
            "name": "hasTouch",
            "displayName": "Hastouch"
          }
        ]
      }
    ],
    "routing": {
      "request": {
        "body": {
          "viewport": "={{$value.items}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Screenshot"
        ]
      }
    }
  },
  {
    "displayName": "Emulate Media Type",
    "name": "emulateMediaType",
    "type": "string",
    "default": "",
    "routing": {
      "request": {
        "body": {
          "emulateMediaType": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Screenshot"
        ]
      }
    }
  },
  {
    "displayName": "Timeout",
    "name": "timeout",
    "description": "Override the system-level timeout for this request. Accepts a value in milliseconds",
    "default": 0,
    "type": "number",
    "routing": {
      "request": {
        "qs": {
          "timeout": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Screenshot"
        ]
      }
    }
  },
  {
    "displayName": "Html",
    "name": "html",
    "type": "string",
    "default": "",
    "routing": {
      "request": {
        "body": {
          "html": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Screenshot"
        ]
      }
    }
  },
  {
    "displayName": "User Agent",
    "name": "userAgent",
    "type": "string",
    "default": "",
    "routing": {
      "request": {
        "body": {
          "userAgent": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Screenshot"
        ]
      }
    }
  },
  {
    "displayName": "Best Attempt",
    "name": "bestAttempt",
    "type": "boolean",
    "default": true,
    "description": "When bestAttempt is set to true, browserless attempt to proceed when \"awaited\" events fail or timeout. This includes things like goto, waitForSelector, and more",
    "routing": {
      "request": {
        "body": {
          "bestAttempt": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Screenshot"
        ]
      }
    }
  },
  {
    "name": "enableCookies",
    "displayName": "Enable Cookies",
    "type": "boolean",
    "default": false,
    "description": "Enable cookies",
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Screenshot"
        ]
      }
    }
  },
  {
    "displayName": "Cookies",
    "name": "cookies",
    "type": "json",
    "default": "[]",
    "typeOptions": {},
    "description": "Array of cookie objects expected by cookie-editor extension",
    "placeholder": "Add item",
    "options": [],
    "routing": {
      "request": {
        "body": {
          "cookies": "={{ (JSON.parse($value) || []).reduce((a, c) => ({ ...a, [c.name]: c.value }), {}) }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Screenshot"
        ],
        "enableCookies": [
          true
        ]
      }
    }
  },
  {
    "displayName": "Block Ads",
    "name": "blockAds",
    "description": "Whether or nor to load ad-blocking extensions for the session. This currently uses uBlock Origin and may cause certain sites to not load properly",
    "default": true,
    "type": "boolean",
    "routing": {
      "request": {
        "qs": {
          "blockAds": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Screenshot"
        ]
      }
    }
  },
  {
    "displayName": "Set Java Script Enabled",
    "name": "setJavaScriptEnabled",
    "type": "boolean",
    "default": true,
    "routing": {
      "request": {
        "body": {
          "setJavaScriptEnabled": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Screenshot"
        ]
      }
    }
  },
  {
    "name": "enableLaunch",
    "displayName": "Enable Launch",
    "type": "boolean",
    "default": false,
    "description": "Launch a new browser instance",
    "displayOptions": {
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Screenshot"
        ]
      }
    }
  },
  {
    "displayName": "Launch",
    "name": "launch",
    "description": "",
    "default": {},
    "type": "collection",
    "typeOptions": {},
    "placeholder": "Add item",
    "options": [
      {
        "type": "fixedCollection",
        "default": [],
        "typeOptions": {
          "multipleValues": true
        },
        "displayName": "Args",
        "name": "args",
        "description": "",
        "placeholder": "Add item",
        "options": [
          {
            "name": "items",
            "displayName": "Items",
            "values": [
              {
                "name": "Item",
                "displayName": "Item",
                "type": "string",
                "default": ""
              }
            ]
          }
        ]
      },
      {
        "type": "fixedCollection",
        "default": {},
        "description": "",
        "options": [
          {
            "name": "items",
            "displayName": "Items",
            "values": [
              {
                "type": "number",
                "default": 0,
                "description": "",
                "name": "deviceScaleFactor",
                "displayName": "Devicescalefactor"
              },
              {
                "type": "boolean",
                "default": true,
                "description": "",
                "name": "hasTouch",
                "displayName": "Hastouch"
              },
              {
                "type": "number",
                "default": 0,
                "description": "",
                "name": "height",
                "displayName": "Height"
              },
              {
                "type": "boolean",
                "default": true,
                "description": "",
                "name": "isLandscape",
                "displayName": "Islandscape"
              },
              {
                "type": "boolean",
                "default": true,
                "description": "",
                "name": "isMobile",
                "displayName": "Ismobile"
              },
              {
                "type": "number",
                "default": 0,
                "description": "",
                "name": "width",
                "displayName": "Width"
              }
            ]
          }
        ],
        "name": "defaultViewport",
        "displayName": "Defaultviewport"
      },
      {
        "type": "boolean",
        "default": true,
        "description": "",
        "name": "devtools",
        "displayName": "Devtools"
      },
      {
        "type": "boolean",
        "default": true,
        "description": "",
        "name": "dumpio",
        "displayName": "Dumpio"
      },
      {
        "type": "options",
        "default": false,
        "description": "",
        "options": [
          {
            "name": "False",
            "value": false
          },
          {
            "name": "Shell",
            "value": "shell"
          },
          {
            "name": "True",
            "value": true
          }
        ],
        "name": "headless",
        "displayName": "Headless"
      },
      {
        "type": "fixedCollection",
        "default": [],
        "typeOptions": {
          "multipleValues": true
        },
        "displayName": "Ignoredefaultargs",
        "name": "ignoreDefaultArgs",
        "description": "",
        "placeholder": "Add item",
        "options": [
          {
            "name": "items",
            "displayName": "Items",
            "values": [
              {
                "name": "Item",
                "displayName": "Item",
                "type": "string",
                "default": ""
              }
            ]
          }
        ]
      },
      {
        "type": "boolean",
        "default": true,
        "description": "",
        "name": "ignoreHTTPSErrors",
        "displayName": "Ignorehttpserrors"
      },
      {
        "type": "number",
        "default": 0,
        "description": "",
        "name": "slowMo",
        "displayName": "Slowmo"
      },
      {
        "type": "boolean",
        "default": true,
        "description": "",
        "name": "stealth",
        "displayName": "Stealth"
      },
      {
        "type": "number",
        "default": 0,
        "description": "",
        "name": "timeout",
        "displayName": "Timeout"
      },
      {
        "type": "string",
        "default": "",
        "description": "",
        "name": "userDataDir",
        "displayName": "Userdatadir"
      },
      {
        "type": "boolean",
        "default": true,
        "description": "",
        "name": "waitForInitialPage",
        "displayName": "Waitforinitialpage"
      }
    ],
    "routing": {
      "request": {
        "qs": {
          "launch": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Screenshot"
        ],
        "enableLaunch": [
          true
        ]
      }
    }
  },
  {
    "displayName": "Reject Resource Types",
    "name": "rejectResourceTypes",
    "type": "multiOptions",
    "default": [],
    "options": [
      {
        "name": "cspviolationreport",
        "value": "cspviolationreport"
      },
      {
        "name": "document",
        "value": "document"
      },
      {
        "name": "eventsource",
        "value": "eventsource"
      },
      {
        "name": "fetch",
        "value": "fetch"
      },
      {
        "name": "font",
        "value": "font"
      },
      {
        "name": "image",
        "value": "image"
      },
      {
        "name": "manifest",
        "value": "manifest"
      },
      {
        "name": "media",
        "value": "media"
      },
      {
        "name": "other",
        "value": "other"
      },
      {
        "name": "ping",
        "value": "ping"
      },
      {
        "name": "prefetch",
        "value": "prefetch"
      },
      {
        "name": "preflight",
        "value": "preflight"
      },
      {
        "name": "script",
        "value": "script"
      },
      {
        "name": "signedexchange",
        "value": "signedexchange"
      },
      {
        "name": "stylesheet",
        "value": "stylesheet"
      },
      {
        "name": "texttrack",
        "value": "texttrack"
      },
      {
        "name": "websocket",
        "value": "websocket"
      },
      {
        "name": "xhr",
        "value": "xhr"
      }
    ],
    "routing": {
      "request": {
        "body": {
          "rejectResourceTypes": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Screenshot"
        ]
      }
    }
  },
  {
    "displayName": "Reject Request Pattern",
    "name": "rejectRequestPattern",
    "type": "fixedCollection",
    "default": [],
    "typeOptions": {
      "multipleValues": true
    },
    "description": "",
    "placeholder": "Add item",
    "options": [
      {
        "name": "items",
        "displayName": "Items",
        "values": [
          {
            "name": "Item",
            "displayName": "Item",
            "type": "string",
            "default": ""
          }
        ]
      }
    ],
    "routing": {
      "request": {
        "body": {
          "rejectRequestPattern": "={{$value.items}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Screenshot"
        ]
      }
    }
  },
  {
    "displayName": "Request Interceptors",
    "name": "requestInterceptors",
    "type": "fixedCollection",
    "default": [],
    "typeOptions": {
      "multipleValues": true
    },
    "description": "",
    "placeholder": "Add item",
    "options": [
      {
        "name": "items",
        "displayName": "Items",
        "values": [
          {
            "type": "string",
            "default": "",
            "description": "An array of patterns (using `req.url().match(r.pattern)` to match) and their corresponding responses to use in order to fulfill those requests",
            "name": "pattern",
            "displayName": "Pattern"
          },
          {
            "type": "fixedCollection",
            "default": {},
            "description": "",
            "options": [
              {
                "name": "items",
                "displayName": "Items",
                "values": [
                  {
                    "type": "number",
                    "default": 0,
                    "description": "",
                    "name": "status",
                    "displayName": "Status"
                  },
                  {
                    "type": "json",
                    "default": "{}",
                    "description": "Optional response headers. All values are converted to strings",
                    "name": "headers",
                    "displayName": "Headers"
                  },
                  {
                    "type": "string",
                    "default": "",
                    "description": "",
                    "name": "contentType",
                    "displayName": "Contenttype"
                  },
                  {
                    "type": "fixedCollection",
                    "default": {},
                    "description": "",
                    "options": [
                      {
                        "name": "items",
                        "displayName": "Items",
                        "values": [
                          {
                            "type": "number",
                            "default": 0,
                            "description": "",
                            "name": "BYTES_PER_ELEMENT",
                            "displayName": "Bytes Per Element"
                          },
                          {
                            "type": "string",
                            "default": {},
                            "description": "",
                            "name": "buffer",
                            "displayName": "Buffer"
                          },
                          {
                            "type": "number",
                            "default": 0,
                            "description": "",
                            "name": "byteLength",
                            "displayName": "Bytelength"
                          },
                          {
                            "type": "number",
                            "default": 0,
                            "description": "",
                            "name": "byteOffset",
                            "displayName": "Byteoffset"
                          },
                          {
                            "type": "number",
                            "default": 0,
                            "description": "",
                            "name": "length",
                            "displayName": "Length"
                          },
                          {
                            "type": "string",
                            "default": "",
                            "description": "",
                            "name": "__@toStringTag@42114",
                            "displayName": "Tostringtag 42114"
                          }
                        ]
                      }
                    ],
                    "name": "body",
                    "displayName": "Body"
                  }
                ]
              }
            ],
            "name": "response",
            "displayName": "Response"
          }
        ]
      }
    ],
    "routing": {
      "request": {
        "body": {
          "requestInterceptors": "={{$value.items}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Screenshot"
        ]
      }
    }
  },
  {
    "displayName": "POST /content",
    "name": "operation",
    "type": "notice",
    "typeOptions": {
      "theme": "info"
    },
    "default": "",
    "displayOptions": {
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Content"
        ]
      }
    }
  },
  {
    "displayName": "Custom Body",
    "name": "customBody",
    "type": "json",
    "default": "{\n  \"addScriptTag\": [\n    {\n      \"url\": \"string\",\n      \"path\": \"string\",\n      \"content\": \"string\",\n      \"type\": \"string\",\n      \"id\": \"string\"\n    }\n  ],\n  \"addStyleTag\": [\n    {\n      \"url\": \"string\",\n      \"path\": \"string\",\n      \"content\": \"string\"\n    }\n  ],\n  \"authenticate\": {\n    \"username\": \"string\",\n    \"password\": \"string\"\n  },\n  \"bestAttempt\": true,\n  \"cookies\": [\n    {\n      \"name\": \"string\",\n      \"value\": \"string\",\n      \"url\": \"string\",\n      \"domain\": \"string\",\n      \"path\": \"string\",\n      \"secure\": true,\n      \"httpOnly\": true,\n      \"sameSite\": \"Lax\",\n      \"expires\": 0,\n      \"priority\": \"High\",\n      \"sameParty\": true,\n      \"sourceScheme\": \"NonSecure\",\n      \"partitionKey\": \"string\"\n    }\n  ],\n  \"emulateMediaType\": \"string\",\n  \"gotoOptions\": {\n    \"referer\": \"string\",\n    \"referrerPolicy\": \"string\",\n    \"timeout\": 0,\n    \"waitUntil\": [\n      \"domcontentloaded\"\n    ],\n    \"signal\": {\n      \"aborted\": true,\n      \"onabort\": {},\n      \"reason\": {}\n    }\n  },\n  \"html\": \"string\",\n  \"rejectRequestPattern\": [\n    \"string\"\n  ],\n  \"rejectResourceTypes\": [\n    \"cspviolationreport\"\n  ],\n  \"requestInterceptors\": [\n    {\n      \"pattern\": \"string\",\n      \"response\": {}\n    }\n  ],\n  \"setExtraHTTPHeaders\": {},\n  \"setJavaScriptEnabled\": true,\n  \"url\": \"string\",\n  \"userAgent\": \"string\",\n  \"viewport\": {\n    \"width\": 0,\n    \"height\": 0,\n    \"deviceScaleFactor\": 0,\n    \"isMobile\": true,\n    \"isLandscape\": true,\n    \"hasTouch\": true\n  },\n  \"waitForEvent\": {\n    \"event\": \"string\",\n    \"timeout\": 0\n  },\n  \"waitForFunction\": {\n    \"fn\": \"string\",\n    \"polling\": {},\n    \"timeout\": 0\n  },\n  \"waitForSelector\": {\n    \"hidden\": true,\n    \"selector\": \"string\",\n    \"timeout\": 0,\n    \"visible\": true\n  },\n  \"waitFor\": 0\n}",
    "description": "Custom body to send",
    "routing": {
      "request": {
        "body": {
          "customBody": "={{JSON.parse($value)}}"
        }
      },
      "send": {
        "preSend": [
          "${helpers.hooks.preSendActionCustonBody}"
        ]
      }
    },
    "displayOptions": {
      "show": {
        "useCustomBody": [
          true
        ],
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Content"
        ]
      }
    }
  },
  {
    "displayName": "Url",
    "name": "url",
    "type": "string",
    "default": "",
    "routing": {
      "request": {
        "body": {
          "url": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Content"
        ]
      }
    },
    "required": true
  },
  {
    "displayName": "Wait For Timeout",
    "name": "waitFor",
    "type": "number",
    "default": 0,
    "routing": {
      "request": {
        "body": {
          "waitFor": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Content"
        ]
      }
    }
  },
  {
    "displayName": "Wait For Selector",
    "name": "waitForSelector",
    "type": "fixedCollection",
    "default": {},
    "options": [
      {
        "name": "items",
        "displayName": "Items",
        "values": [
          {
            "type": "boolean",
            "default": true,
            "description": "",
            "name": "hidden",
            "displayName": "Hidden"
          },
          {
            "type": "string",
            "default": "",
            "description": "",
            "name": "selector",
            "displayName": "Selector"
          },
          {
            "type": "number",
            "default": 0,
            "description": "",
            "name": "timeout",
            "displayName": "Timeout"
          },
          {
            "type": "boolean",
            "default": true,
            "description": "",
            "name": "visible",
            "displayName": "Visible"
          }
        ]
      }
    ],
    "routing": {
      "request": {
        "body": {
          "waitForSelector": "={{$value.items}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Content"
        ]
      }
    }
  },
  {
    "displayName": "Goto Options",
    "name": "gotoOptions",
    "type": "fixedCollection",
    "default": {},
    "options": [
      {
        "name": "items",
        "displayName": "Items",
        "values": [
          {
            "type": "string",
            "default": "",
            "description": "If provided, it will take preference over the referer header value set by {@link Page.setExtraHTTPHeaderspage.setExtraHTTPHeaders()}",
            "name": "referer",
            "displayName": "Referer"
          },
          {
            "type": "string",
            "default": "",
            "description": "If provided, it will take preference over the referer-policy header value set by {@link Page.setExtraHTTPHeaderspage.setExtraHTTPHeaders()}",
            "name": "referrerPolicy",
            "displayName": "Referrerpolicy"
          },
          {
            "type": "number",
            "default": 0,
            "description": "Maximum wait time in milliseconds. Pass 0 to disable the timeout. The default value can be changed by using the {@link Page.setDefaultTimeout} or {@link Page.setDefaultNavigationTimeout} methods",
            "name": "timeout",
            "displayName": "Timeout"
          },
          {
            "type": "multiOptions",
            "default": [],
            "description": "When to consider waiting succeeds. Given an array of event strings, waiting is considered to be successful after all events have been fired",
            "options": [
              {
                "name": "domcontentloaded",
                "value": "domcontentloaded"
              },
              {
                "name": "load",
                "value": "load"
              },
              {
                "name": "networkidle0",
                "value": "networkidle0"
              },
              {
                "name": "networkidle2",
                "value": "networkidle2"
              }
            ],
            "name": "waitUntil",
            "displayName": "Waituntil"
          },
          {
            "type": "fixedCollection",
            "default": {},
            "description": "A signal object that allows you to cancel the call",
            "options": [
              {
                "name": "items",
                "displayName": "Items",
                "values": [
                  {
                    "type": "boolean",
                    "default": true,
                    "description": "",
                    "name": "aborted",
                    "displayName": "Aborted"
                  },
                  {
                    "type": "json",
                    "default": "{}",
                    "description": "",
                    "name": "onabort",
                    "displayName": "Onabort"
                  },
                  {
                    "type": "string",
                    "default": "",
                    "description": "",
                    "name": "reason",
                    "displayName": "Reason"
                  }
                ]
              }
            ],
            "name": "signal",
            "displayName": "Signal"
          }
        ]
      }
    ],
    "routing": {
      "request": {
        "body": {
          "gotoOptions": "={{$value.items}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Content"
        ]
      }
    }
  },
  {
    "displayName": "Wait For Event",
    "name": "waitForEvent",
    "type": "fixedCollection",
    "default": {},
    "options": [
      {
        "name": "items",
        "displayName": "Items",
        "values": [
          {
            "type": "string",
            "default": "",
            "description": "",
            "name": "event",
            "displayName": "Event"
          },
          {
            "type": "number",
            "default": 0,
            "description": "",
            "name": "timeout",
            "displayName": "Timeout"
          }
        ]
      }
    ],
    "routing": {
      "request": {
        "body": {
          "waitForEvent": "={{$value.items}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Content"
        ]
      }
    }
  },
  {
    "displayName": "Wait For Function",
    "name": "waitForFunction",
    "type": "fixedCollection",
    "default": {},
    "options": [
      {
        "name": "items",
        "displayName": "Items",
        "values": [
          {
            "type": "string",
            "default": "",
            "description": "The function, or statement, to be evaluated in browser context",
            "name": "fn",
            "displayName": "Fn"
          },
          {
            "type": "string",
            "description": "An interval at which the pageFunction is executed, defaults to raf. If polling is a number, then it is treated as an interval in milliseconds at which the function would be executed. If polling is a string, then it can be one of the following values: \"raf\" or \"mutation\"",
            "name": "polling",
            "displayName": "Polling"
          },
          {
            "type": "number",
            "default": 0,
            "description": "Maximum time to wait for in milliseconds. Defaults to 30000 (30 seconds). Pass 0 to disable timeout",
            "name": "timeout",
            "displayName": "Timeout"
          }
        ]
      }
    ],
    "routing": {
      "request": {
        "body": {
          "waitForFunction": "={{$value.items}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Content"
        ]
      }
    }
  },
  {
    "displayName": "Add Script Tag",
    "name": "addScriptTag",
    "type": "fixedCollection",
    "default": [],
    "typeOptions": {
      "multipleValues": true
    },
    "description": "",
    "placeholder": "Add item",
    "options": [
      {
        "name": "items",
        "displayName": "Items",
        "values": [
          {
            "type": "string",
            "default": "",
            "description": "URL of the script to be added",
            "name": "url",
            "displayName": "Url"
          },
          {
            "type": "string",
            "default": "",
            "description": "Path to a JavaScript file to be injected into the frame",
            "name": "path",
            "displayName": "Path"
          },
          {
            "type": "string",
            "default": "",
            "description": "JavaScript to be injected into the frame",
            "name": "content",
            "displayName": "Content"
          },
          {
            "type": "string",
            "default": "",
            "description": "Sets the `type` of the script. Use `module` in order to load an ES2015 module",
            "name": "type",
            "displayName": "Type"
          },
          {
            "type": "string",
            "default": "",
            "description": "Sets the `id` of the script",
            "name": "id",
            "displayName": "Id"
          }
        ]
      }
    ],
    "routing": {
      "request": {
        "body": {
          "addScriptTag": "={{$value.items}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Content"
        ]
      }
    }
  },
  {
    "displayName": "Add Style Tag",
    "name": "addStyleTag",
    "type": "fixedCollection",
    "default": [],
    "typeOptions": {
      "multipleValues": true
    },
    "description": "",
    "placeholder": "Add item",
    "options": [
      {
        "name": "items",
        "displayName": "Items",
        "values": [
          {
            "type": "string",
            "default": "",
            "description": "the URL of the CSS file to be added",
            "name": "url",
            "displayName": "Url"
          },
          {
            "type": "string",
            "default": "",
            "description": "The path to a CSS file to be injected into the frame",
            "name": "path",
            "displayName": "Path"
          },
          {
            "type": "string",
            "default": "",
            "description": "Raw CSS content to be injected into the frame",
            "name": "content",
            "displayName": "Content"
          }
        ]
      }
    ],
    "routing": {
      "request": {
        "body": {
          "addStyleTag": "={{$value.items}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Content"
        ]
      }
    }
  },
  {
    "displayName": "Set Extra HTTP Headers",
    "name": "setExtraHTTPHeaders",
    "type": "fixedCollection",
    "default": {},
    "description": "Set extra HTTP headers",
    "routing": {
      "request": {
        "body": {
          "setExtraHTTPHeaders": "={{$value.headers}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Content"
        ]
      }
    },
    "placeholder": "Add Header",
    "typeOptions": {
      "multipleValues": true
    },
    "options": [
      {
        "displayName": "Set Extra HTTP Headers",
        "name": "headers",
        "values": [
          {
            "displayName": "Name",
            "name": "name",
            "type": "string",
            "default": "",
            "description": "Name of the header"
          },
          {
            "displayName": "Value",
            "name": "value",
            "type": "string",
            "default": "",
            "description": "Value of the header"
          }
        ]
      }
    ]
  },
  {
    "displayName": "Authenticate",
    "name": "authenticate",
    "type": "fixedCollection",
    "default": {},
    "options": [
      {
        "name": "items",
        "displayName": "Items",
        "values": [
          {
            "type": "string",
            "default": "",
            "description": "",
            "name": "username",
            "displayName": "Username"
          },
          {
            "type": "string",
            "default": "",
            "description": "",
            "name": "password",
            "displayName": "Password"
          }
        ]
      }
    ],
    "routing": {
      "request": {
        "body": {
          "authenticate": "={{$value.items}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Content"
        ]
      }
    }
  },
  {
    "displayName": "Viewport",
    "name": "viewport",
    "type": "fixedCollection",
    "default": {},
    "options": [
      {
        "name": "items",
        "displayName": "Items",
        "values": [
          {
            "type": "number",
            "default": 0,
            "description": "The page width in CSS pixels",
            "name": "width",
            "displayName": "Width"
          },
          {
            "type": "number",
            "default": 0,
            "description": "The page height in CSS pixels",
            "name": "height",
            "displayName": "Height"
          },
          {
            "type": "number",
            "default": 0,
            "description": "Specify device scale factor. See {@link https://developer.mozilla.org/en-US/docs/Web/API/Window/devicePixelRatio devicePixelRatio} for more info",
            "name": "deviceScaleFactor",
            "displayName": "Devicescalefactor"
          },
          {
            "type": "boolean",
            "default": true,
            "description": "Whether the `meta viewport` tag is taken into account",
            "name": "isMobile",
            "displayName": "Ismobile"
          },
          {
            "type": "boolean",
            "default": true,
            "description": "Specifies if the viewport is in landscape mode",
            "name": "isLandscape",
            "displayName": "Islandscape"
          },
          {
            "type": "boolean",
            "default": true,
            "description": "Specify if the viewport supports touch events",
            "name": "hasTouch",
            "displayName": "Hastouch"
          }
        ]
      }
    ],
    "routing": {
      "request": {
        "body": {
          "viewport": "={{$value.items}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Content"
        ]
      }
    }
  },
  {
    "displayName": "Emulate Media Type",
    "name": "emulateMediaType",
    "type": "string",
    "default": "",
    "routing": {
      "request": {
        "body": {
          "emulateMediaType": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Content"
        ]
      }
    }
  },
  {
    "displayName": "Timeout",
    "name": "timeout",
    "description": "Override the system-level timeout for this request. Accepts a value in milliseconds",
    "default": 0,
    "type": "number",
    "routing": {
      "request": {
        "qs": {
          "timeout": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Content"
        ]
      }
    }
  },
  {
    "displayName": "Html",
    "name": "html",
    "type": "string",
    "default": "",
    "routing": {
      "request": {
        "body": {
          "html": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Content"
        ]
      }
    }
  },
  {
    "displayName": "User Agent",
    "name": "userAgent",
    "type": "string",
    "default": "",
    "routing": {
      "request": {
        "body": {
          "userAgent": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Content"
        ]
      }
    }
  },
  {
    "displayName": "Best Attempt",
    "name": "bestAttempt",
    "type": "boolean",
    "default": true,
    "description": "When bestAttempt is set to true, browserless attempt to proceed when \"awaited\" events fail or timeout. This includes things like goto, waitForSelector, and more",
    "routing": {
      "request": {
        "body": {
          "bestAttempt": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Content"
        ]
      }
    }
  },
  {
    "name": "enableCookies",
    "displayName": "Enable Cookies",
    "type": "boolean",
    "default": false,
    "description": "Enable cookies",
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Content"
        ]
      }
    }
  },
  {
    "displayName": "Cookies",
    "name": "cookies",
    "type": "json",
    "default": "[]",
    "typeOptions": {},
    "description": "Array of cookie objects expected by cookie-editor extension",
    "placeholder": "Add item",
    "options": [],
    "routing": {
      "request": {
        "body": {
          "cookies": "={{ (JSON.parse($value) || []).reduce((a, c) => ({ ...a, [c.name]: c.value }), {}) }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Content"
        ],
        "enableCookies": [
          true
        ]
      }
    }
  },
  {
    "displayName": "Block Ads",
    "name": "blockAds",
    "description": "Whether or nor to load ad-blocking extensions for the session. This currently uses uBlock Origin and may cause certain sites to not load properly",
    "default": true,
    "type": "boolean",
    "routing": {
      "request": {
        "qs": {
          "blockAds": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Content"
        ]
      }
    }
  },
  {
    "displayName": "Set Java Script Enabled",
    "name": "setJavaScriptEnabled",
    "type": "boolean",
    "default": true,
    "description": "Whether or not to allow JavaScript to run on the page",
    "routing": {
      "request": {
        "body": {
          "setJavaScriptEnabled": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Content"
        ]
      }
    }
  },
  {
    "name": "enableLaunch",
    "displayName": "Enable Launch",
    "type": "boolean",
    "default": false,
    "description": "Launch a new browser instance",
    "displayOptions": {
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Content"
        ]
      }
    }
  },
  {
    "displayName": "Launch",
    "name": "launch",
    "description": "",
    "default": {},
    "type": "collection",
    "typeOptions": {},
    "placeholder": "Add item",
    "options": [
      {
        "type": "fixedCollection",
        "default": [],
        "typeOptions": {
          "multipleValues": true
        },
        "displayName": "Args",
        "name": "args",
        "description": "",
        "placeholder": "Add item",
        "options": [
          {
            "name": "items",
            "displayName": "Items",
            "values": [
              {
                "name": "Item",
                "displayName": "Item",
                "type": "string",
                "default": ""
              }
            ]
          }
        ]
      },
      {
        "type": "fixedCollection",
        "default": {},
        "description": "",
        "options": [
          {
            "name": "items",
            "displayName": "Items",
            "values": [
              {
                "type": "number",
                "default": 0,
                "description": "",
                "name": "deviceScaleFactor",
                "displayName": "Devicescalefactor"
              },
              {
                "type": "boolean",
                "default": true,
                "description": "",
                "name": "hasTouch",
                "displayName": "Hastouch"
              },
              {
                "type": "number",
                "default": 0,
                "description": "",
                "name": "height",
                "displayName": "Height"
              },
              {
                "type": "boolean",
                "default": true,
                "description": "",
                "name": "isLandscape",
                "displayName": "Islandscape"
              },
              {
                "type": "boolean",
                "default": true,
                "description": "",
                "name": "isMobile",
                "displayName": "Ismobile"
              },
              {
                "type": "number",
                "default": 0,
                "description": "",
                "name": "width",
                "displayName": "Width"
              }
            ]
          }
        ],
        "name": "defaultViewport",
        "displayName": "Defaultviewport"
      },
      {
        "type": "boolean",
        "default": true,
        "description": "",
        "name": "devtools",
        "displayName": "Devtools"
      },
      {
        "type": "boolean",
        "default": true,
        "description": "",
        "name": "dumpio",
        "displayName": "Dumpio"
      },
      {
        "type": "options",
        "default": false,
        "description": "",
        "options": [
          {
            "name": "False",
            "value": false
          },
          {
            "name": "Shell",
            "value": "shell"
          },
          {
            "name": "True",
            "value": true
          }
        ],
        "name": "headless",
        "displayName": "Headless"
      },
      {
        "type": "fixedCollection",
        "default": [],
        "typeOptions": {
          "multipleValues": true
        },
        "displayName": "Ignoredefaultargs",
        "name": "ignoreDefaultArgs",
        "description": "",
        "placeholder": "Add item",
        "options": [
          {
            "name": "items",
            "displayName": "Items",
            "values": [
              {
                "name": "Item",
                "displayName": "Item",
                "type": "string",
                "default": ""
              }
            ]
          }
        ]
      },
      {
        "type": "boolean",
        "default": true,
        "description": "",
        "name": "ignoreHTTPSErrors",
        "displayName": "Ignorehttpserrors"
      },
      {
        "type": "number",
        "default": 0,
        "description": "",
        "name": "slowMo",
        "displayName": "Slowmo"
      },
      {
        "type": "boolean",
        "default": true,
        "description": "",
        "name": "stealth",
        "displayName": "Stealth"
      },
      {
        "type": "number",
        "default": 0,
        "description": "",
        "name": "timeout",
        "displayName": "Timeout"
      },
      {
        "type": "string",
        "default": "",
        "description": "",
        "name": "userDataDir",
        "displayName": "Userdatadir"
      },
      {
        "type": "boolean",
        "default": true,
        "description": "",
        "name": "waitForInitialPage",
        "displayName": "Waitforinitialpage"
      }
    ],
    "routing": {
      "request": {
        "qs": {
          "launch": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Content"
        ],
        "enableLaunch": [
          true
        ]
      }
    }
  },
  {
    "displayName": "Reject Resource Types",
    "name": "rejectResourceTypes",
    "type": "multiOptions",
    "default": [],
    "options": [
      {
        "name": "cspviolationreport",
        "value": "cspviolationreport"
      },
      {
        "name": "document",
        "value": "document"
      },
      {
        "name": "eventsource",
        "value": "eventsource"
      },
      {
        "name": "fetch",
        "value": "fetch"
      },
      {
        "name": "font",
        "value": "font"
      },
      {
        "name": "image",
        "value": "image"
      },
      {
        "name": "manifest",
        "value": "manifest"
      },
      {
        "name": "media",
        "value": "media"
      },
      {
        "name": "other",
        "value": "other"
      },
      {
        "name": "ping",
        "value": "ping"
      },
      {
        "name": "prefetch",
        "value": "prefetch"
      },
      {
        "name": "preflight",
        "value": "preflight"
      },
      {
        "name": "script",
        "value": "script"
      },
      {
        "name": "signedexchange",
        "value": "signedexchange"
      },
      {
        "name": "stylesheet",
        "value": "stylesheet"
      },
      {
        "name": "texttrack",
        "value": "texttrack"
      },
      {
        "name": "websocket",
        "value": "websocket"
      },
      {
        "name": "xhr",
        "value": "xhr"
      }
    ],
    "routing": {
      "request": {
        "body": {
          "rejectResourceTypes": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Content"
        ]
      }
    }
  },
  {
    "displayName": "Reject Request Pattern",
    "name": "rejectRequestPattern",
    "type": "fixedCollection",
    "default": [],
    "typeOptions": {
      "multipleValues": true
    },
    "description": "",
    "placeholder": "Add item",
    "options": [
      {
        "name": "items",
        "displayName": "Items",
        "values": [
          {
            "name": "Item",
            "displayName": "Item",
            "type": "string",
            "default": ""
          }
        ]
      }
    ],
    "routing": {
      "request": {
        "body": {
          "rejectRequestPattern": "={{$value.items}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Content"
        ]
      }
    }
  },
  {
    "displayName": "Request Interceptors",
    "name": "requestInterceptors",
    "type": "fixedCollection",
    "default": [],
    "typeOptions": {
      "multipleValues": true
    },
    "description": "",
    "placeholder": "Add item",
    "options": [
      {
        "name": "items",
        "displayName": "Items",
        "values": [
          {
            "type": "string",
            "default": "",
            "description": "An array of patterns (using `req.url().match(r.pattern)` to match) and their corresponding responses to use in order to fulfill those requests",
            "name": "pattern",
            "displayName": "Pattern"
          },
          {
            "type": "fixedCollection",
            "default": {},
            "description": "",
            "options": [
              {
                "name": "items",
                "displayName": "Items",
                "values": [
                  {
                    "type": "number",
                    "default": 0,
                    "description": "",
                    "name": "status",
                    "displayName": "Status"
                  },
                  {
                    "type": "json",
                    "default": "{}",
                    "description": "Optional response headers. All values are converted to strings",
                    "name": "headers",
                    "displayName": "Headers"
                  },
                  {
                    "type": "string",
                    "default": "",
                    "description": "",
                    "name": "contentType",
                    "displayName": "Contenttype"
                  },
                  {
                    "type": "fixedCollection",
                    "default": {},
                    "description": "",
                    "options": [
                      {
                        "name": "items",
                        "displayName": "Items",
                        "values": [
                          {
                            "type": "number",
                            "default": 0,
                            "description": "",
                            "name": "BYTES_PER_ELEMENT",
                            "displayName": "Bytes Per Element"
                          },
                          {
                            "type": "string",
                            "default": {},
                            "description": "",
                            "name": "buffer",
                            "displayName": "Buffer"
                          },
                          {
                            "type": "number",
                            "default": 0,
                            "description": "",
                            "name": "byteLength",
                            "displayName": "Bytelength"
                          },
                          {
                            "type": "number",
                            "default": 0,
                            "description": "",
                            "name": "byteOffset",
                            "displayName": "Byteoffset"
                          },
                          {
                            "type": "number",
                            "default": 0,
                            "description": "",
                            "name": "length",
                            "displayName": "Length"
                          },
                          {
                            "type": "string",
                            "default": "",
                            "description": "",
                            "name": "__@toStringTag@42114",
                            "displayName": "Tostringtag 42114"
                          }
                        ]
                      }
                    ],
                    "name": "body",
                    "displayName": "Body"
                  }
                ]
              }
            ],
            "name": "response",
            "displayName": "Response"
          }
        ]
      }
    ],
    "routing": {
      "request": {
        "body": {
          "requestInterceptors": "={{$value.items}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Content"
        ]
      }
    }
  },
  {
    "displayName": "POST /download",
    "name": "operation",
    "type": "notice",
    "typeOptions": {
      "theme": "info"
    },
    "default": "",
    "displayOptions": {
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Download"
        ]
      }
    }
  },
  {
    "required": true,
    "displayName": "Code",
    "name": "code",
    "type": "string",
    "default": "export default async function () {\n  return { hello: 'world!', type: 'application/json' };\n}\n",
    "routing": {
      "request": {
        "body": {
          "code": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Download"
        ]
      }
    },
    "typeOptions": {
      "rows": 10
    }
  },
  {
    "displayName": "Context",
    "name": "context",
    "type": "json",
    "default": "{}",
    "routing": {
      "request": {
        "body": {
          "context": "={{ JSON.parse($value) }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Download"
        ]
      }
    }
  },
  {
    "displayName": "Custom Body",
    "name": "customBody",
    "type": "json",
    "default": "{\n  \"code\": \"string\",\n  \"context\": {}\n}",
    "description": "Custom body to send",
    "routing": {
      "request": {
        "body": {
          "customBody": "={{JSON.parse($value)}}"
        }
      },
      "send": {
        "preSend": [
          "${helpers.hooks.preSendActionCustonBody}"
        ]
      }
    },
    "displayOptions": {
      "show": {
        "useCustomBody": [
          true
        ],
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Download"
        ]
      }
    }
  },
  {
    "displayName": "Timeout",
    "name": "timeout",
    "description": "Override the system-level timeout for this request. Accepts a value in milliseconds",
    "default": 0,
    "type": "number",
    "routing": {
      "request": {
        "qs": {
          "timeout": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Download"
        ]
      }
    }
  },
  {
    "displayName": "Block Ads",
    "name": "blockAds",
    "description": "Whether or nor to load ad-blocking extensions for the session. This currently uses uBlock Origin and may cause certain sites to not load properly",
    "default": true,
    "type": "boolean",
    "routing": {
      "request": {
        "qs": {
          "blockAds": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Download"
        ]
      }
    }
  },
  {
    "name": "enableLaunch",
    "displayName": "Enable Launch",
    "type": "boolean",
    "default": false,
    "description": "Launch a new browser instance",
    "displayOptions": {
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Download"
        ]
      }
    }
  },
  {
    "displayName": "Launch",
    "name": "launch",
    "description": "",
    "default": {},
    "type": "collection",
    "typeOptions": {},
    "placeholder": "Add item",
    "options": [
      {
        "type": "fixedCollection",
        "default": [],
        "typeOptions": {
          "multipleValues": true
        },
        "displayName": "Args",
        "name": "args",
        "description": "",
        "placeholder": "Add item",
        "options": [
          {
            "name": "items",
            "displayName": "Items",
            "values": [
              {
                "name": "Item",
                "displayName": "Item",
                "type": "string",
                "default": ""
              }
            ]
          }
        ]
      },
      {
        "type": "fixedCollection",
        "default": {},
        "description": "",
        "options": [
          {
            "name": "items",
            "displayName": "Items",
            "values": [
              {
                "type": "number",
                "default": 0,
                "description": "",
                "name": "deviceScaleFactor",
                "displayName": "Devicescalefactor"
              },
              {
                "type": "boolean",
                "default": true,
                "description": "",
                "name": "hasTouch",
                "displayName": "Hastouch"
              },
              {
                "type": "number",
                "default": 0,
                "description": "",
                "name": "height",
                "displayName": "Height"
              },
              {
                "type": "boolean",
                "default": true,
                "description": "",
                "name": "isLandscape",
                "displayName": "Islandscape"
              },
              {
                "type": "boolean",
                "default": true,
                "description": "",
                "name": "isMobile",
                "displayName": "Ismobile"
              },
              {
                "type": "number",
                "default": 0,
                "description": "",
                "name": "width",
                "displayName": "Width"
              }
            ]
          }
        ],
        "name": "defaultViewport",
        "displayName": "Defaultviewport"
      },
      {
        "type": "boolean",
        "default": true,
        "description": "",
        "name": "devtools",
        "displayName": "Devtools"
      },
      {
        "type": "boolean",
        "default": true,
        "description": "",
        "name": "dumpio",
        "displayName": "Dumpio"
      },
      {
        "type": "options",
        "default": false,
        "description": "",
        "options": [
          {
            "name": "False",
            "value": false
          },
          {
            "name": "Shell",
            "value": "shell"
          },
          {
            "name": "True",
            "value": true
          }
        ],
        "name": "headless",
        "displayName": "Headless"
      },
      {
        "type": "fixedCollection",
        "default": [],
        "typeOptions": {
          "multipleValues": true
        },
        "displayName": "Ignoredefaultargs",
        "name": "ignoreDefaultArgs",
        "description": "",
        "placeholder": "Add item",
        "options": [
          {
            "name": "items",
            "displayName": "Items",
            "values": [
              {
                "name": "Item",
                "displayName": "Item",
                "type": "string",
                "default": ""
              }
            ]
          }
        ]
      },
      {
        "type": "boolean",
        "default": true,
        "description": "",
        "name": "ignoreHTTPSErrors",
        "displayName": "Ignorehttpserrors"
      },
      {
        "type": "number",
        "default": 0,
        "description": "",
        "name": "slowMo",
        "displayName": "Slowmo"
      },
      {
        "type": "boolean",
        "default": true,
        "description": "",
        "name": "stealth",
        "displayName": "Stealth"
      },
      {
        "type": "number",
        "default": 0,
        "description": "",
        "name": "timeout",
        "displayName": "Timeout"
      },
      {
        "type": "string",
        "default": "",
        "description": "",
        "name": "userDataDir",
        "displayName": "Userdatadir"
      },
      {
        "type": "boolean",
        "default": true,
        "description": "",
        "name": "waitForInitialPage",
        "displayName": "Waitforinitialpage"
      }
    ],
    "routing": {
      "request": {
        "qs": {
          "launch": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Download"
        ],
        "enableLaunch": [
          true
        ]
      }
    }
  },
  {
    "displayName": "POST /function",
    "name": "operation",
    "type": "notice",
    "typeOptions": {
      "theme": "info"
    },
    "default": "",
    "displayOptions": {
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Execute"
        ]
      }
    }
  },
  {
    "required": true,
    "displayName": "Code",
    "name": "code",
    "type": "string",
    "default": "export default async function () {\n  return { hello: 'world!', type: 'application/json' };\n}\n",
    "routing": {
      "request": {
        "body": {
          "code": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Execute"
        ]
      }
    },
    "typeOptions": {
      "rows": 10
    }
  },
  {
    "displayName": "Context",
    "name": "context",
    "type": "json",
    "default": "{}",
    "routing": {
      "request": {
        "body": {
          "context": "={{ JSON.parse($value) }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Execute"
        ]
      }
    }
  },
  {
    "displayName": "Custom Body",
    "name": "customBody",
    "type": "json",
    "default": "{\n  \"code\": \"string\",\n  \"context\": {}\n}",
    "description": "Custom body to send",
    "routing": {
      "request": {
        "body": {
          "customBody": "={{JSON.parse($value)}}"
        }
      },
      "send": {
        "preSend": [
          "${helpers.hooks.preSendActionCustonBody}"
        ]
      }
    },
    "displayOptions": {
      "show": {
        "useCustomBody": [
          true
        ],
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Execute"
        ]
      }
    }
  },
  {
    "displayName": "Timeout",
    "name": "timeout",
    "description": "Override the system-level timeout for this request. Accepts a value in milliseconds",
    "default": 0,
    "type": "number",
    "routing": {
      "request": {
        "qs": {
          "timeout": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Execute"
        ]
      }
    }
  },
  {
    "displayName": "Block Ads",
    "name": "blockAds",
    "description": "Whether or nor to load ad-blocking extensions for the session. This currently uses uBlock Origin and may cause certain sites to not load properly",
    "default": true,
    "type": "boolean",
    "routing": {
      "request": {
        "qs": {
          "blockAds": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Execute"
        ]
      }
    }
  },
  {
    "name": "enableLaunch",
    "displayName": "Enable Launch",
    "type": "boolean",
    "default": false,
    "description": "Launch a new browser instance",
    "displayOptions": {
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Execute"
        ]
      }
    }
  },
  {
    "displayName": "Launch",
    "name": "launch",
    "description": "",
    "default": {},
    "type": "collection",
    "typeOptions": {},
    "placeholder": "Add item",
    "options": [
      {
        "type": "fixedCollection",
        "default": [],
        "typeOptions": {
          "multipleValues": true
        },
        "displayName": "Args",
        "name": "args",
        "description": "",
        "placeholder": "Add item",
        "options": [
          {
            "name": "items",
            "displayName": "Items",
            "values": [
              {
                "name": "Item",
                "displayName": "Item",
                "type": "string",
                "default": ""
              }
            ]
          }
        ]
      },
      {
        "type": "fixedCollection",
        "default": {},
        "description": "",
        "options": [
          {
            "name": "items",
            "displayName": "Items",
            "values": [
              {
                "type": "number",
                "default": 0,
                "description": "",
                "name": "deviceScaleFactor",
                "displayName": "Devicescalefactor"
              },
              {
                "type": "boolean",
                "default": true,
                "description": "",
                "name": "hasTouch",
                "displayName": "Hastouch"
              },
              {
                "type": "number",
                "default": 0,
                "description": "",
                "name": "height",
                "displayName": "Height"
              },
              {
                "type": "boolean",
                "default": true,
                "description": "",
                "name": "isLandscape",
                "displayName": "Islandscape"
              },
              {
                "type": "boolean",
                "default": true,
                "description": "",
                "name": "isMobile",
                "displayName": "Ismobile"
              },
              {
                "type": "number",
                "default": 0,
                "description": "",
                "name": "width",
                "displayName": "Width"
              }
            ]
          }
        ],
        "name": "defaultViewport",
        "displayName": "Defaultviewport"
      },
      {
        "type": "boolean",
        "default": true,
        "description": "",
        "name": "devtools",
        "displayName": "Devtools"
      },
      {
        "type": "boolean",
        "default": true,
        "description": "",
        "name": "dumpio",
        "displayName": "Dumpio"
      },
      {
        "type": "options",
        "default": false,
        "description": "",
        "options": [
          {
            "name": "False",
            "value": false
          },
          {
            "name": "Shell",
            "value": "shell"
          },
          {
            "name": "True",
            "value": true
          }
        ],
        "name": "headless",
        "displayName": "Headless"
      },
      {
        "type": "fixedCollection",
        "default": [],
        "typeOptions": {
          "multipleValues": true
        },
        "displayName": "Ignoredefaultargs",
        "name": "ignoreDefaultArgs",
        "description": "",
        "placeholder": "Add item",
        "options": [
          {
            "name": "items",
            "displayName": "Items",
            "values": [
              {
                "name": "Item",
                "displayName": "Item",
                "type": "string",
                "default": ""
              }
            ]
          }
        ]
      },
      {
        "type": "boolean",
        "default": true,
        "description": "",
        "name": "ignoreHTTPSErrors",
        "displayName": "Ignorehttpserrors"
      },
      {
        "type": "number",
        "default": 0,
        "description": "",
        "name": "slowMo",
        "displayName": "Slowmo"
      },
      {
        "type": "boolean",
        "default": true,
        "description": "",
        "name": "stealth",
        "displayName": "Stealth"
      },
      {
        "type": "number",
        "default": 0,
        "description": "",
        "name": "timeout",
        "displayName": "Timeout"
      },
      {
        "type": "string",
        "default": "",
        "description": "",
        "name": "userDataDir",
        "displayName": "Userdatadir"
      },
      {
        "type": "boolean",
        "default": true,
        "description": "",
        "name": "waitForInitialPage",
        "displayName": "Waitforinitialpage"
      }
    ],
    "routing": {
      "request": {
        "qs": {
          "launch": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Execute"
        ],
        "enableLaunch": [
          true
        ]
      }
    }
  },
  {
    "displayName": "POST /performance",
    "name": "operation",
    "type": "notice",
    "typeOptions": {
      "theme": "info"
    },
    "default": "",
    "displayOptions": {
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Performance"
        ]
      }
    }
  },
  {
    "displayName": "Budgets",
    "name": "budgets",
    "type": "fixedCollection",
    "default": [],
    "typeOptions": {
      "multipleValues": true
    },
    "description": "",
    "placeholder": "Add item",
    "options": [
      {
        "name": "items",
        "displayName": "Items",
        "values": []
      }
    ],
    "routing": {
      "request": {
        "body": {
          "budgets": "={{$value.items}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Performance"
        ]
      }
    }
  },
  {
    "displayName": "Config",
    "name": "config",
    "type": "fixedCollection",
    "default": {},
    "options": [
      {
        "name": "items",
        "displayName": "Items",
        "values": []
      }
    ],
    "routing": {
      "request": {
        "body": {
          "config": "={{$value.items}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Performance"
        ]
      }
    }
  },
  {
    "displayName": "Custom Body",
    "name": "customBody",
    "type": "json",
    "default": "{\n  \"budgets\": [\n    {}\n  ],\n  \"config\": {},\n  \"url\": \"string\"\n}",
    "description": "Custom body to send",
    "routing": {
      "request": {
        "body": {
          "customBody": "={{JSON.parse($value)}}"
        }
      },
      "send": {
        "preSend": [
          "${helpers.hooks.preSendActionCustonBody}"
        ]
      }
    },
    "displayOptions": {
      "show": {
        "useCustomBody": [
          true
        ],
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Performance"
        ]
      }
    }
  },
  {
    "displayName": "Url",
    "name": "url",
    "type": "string",
    "default": "",
    "routing": {
      "request": {
        "body": {
          "url": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Performance"
        ]
      }
    },
    "required": true
  },
  {
    "displayName": "Timeout",
    "name": "timeout",
    "description": "Override the system-level timeout for this request. Accepts a value in milliseconds",
    "default": 0,
    "type": "number",
    "routing": {
      "request": {
        "qs": {
          "timeout": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Performance"
        ]
      }
    }
  },
  {
    "displayName": "Block Ads",
    "name": "blockAds",
    "description": "Whether or nor to load ad-blocking extensions for the session. This currently uses uBlock Origin and may cause certain sites to not load properly",
    "default": true,
    "type": "boolean",
    "routing": {
      "request": {
        "qs": {
          "blockAds": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Performance"
        ]
      }
    }
  },
  {
    "name": "enableLaunch",
    "displayName": "Enable Launch",
    "type": "boolean",
    "default": false,
    "description": "Launch a new browser instance",
    "displayOptions": {
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Performance"
        ]
      }
    }
  },
  {
    "displayName": "Launch",
    "name": "launch",
    "description": "",
    "default": {},
    "type": "collection",
    "typeOptions": {},
    "placeholder": "Add item",
    "options": [
      {
        "type": "fixedCollection",
        "default": [],
        "typeOptions": {
          "multipleValues": true
        },
        "displayName": "Args",
        "name": "args",
        "description": "",
        "placeholder": "Add item",
        "options": [
          {
            "name": "items",
            "displayName": "Items",
            "values": [
              {
                "name": "Item",
                "displayName": "Item",
                "type": "string",
                "default": ""
              }
            ]
          }
        ]
      },
      {
        "type": "fixedCollection",
        "default": {},
        "description": "",
        "options": [
          {
            "name": "items",
            "displayName": "Items",
            "values": [
              {
                "type": "number",
                "default": 0,
                "description": "",
                "name": "deviceScaleFactor",
                "displayName": "Devicescalefactor"
              },
              {
                "type": "boolean",
                "default": true,
                "description": "",
                "name": "hasTouch",
                "displayName": "Hastouch"
              },
              {
                "type": "number",
                "default": 0,
                "description": "",
                "name": "height",
                "displayName": "Height"
              },
              {
                "type": "boolean",
                "default": true,
                "description": "",
                "name": "isLandscape",
                "displayName": "Islandscape"
              },
              {
                "type": "boolean",
                "default": true,
                "description": "",
                "name": "isMobile",
                "displayName": "Ismobile"
              },
              {
                "type": "number",
                "default": 0,
                "description": "",
                "name": "width",
                "displayName": "Width"
              }
            ]
          }
        ],
        "name": "defaultViewport",
        "displayName": "Defaultviewport"
      },
      {
        "type": "boolean",
        "default": true,
        "description": "",
        "name": "devtools",
        "displayName": "Devtools"
      },
      {
        "type": "boolean",
        "default": true,
        "description": "",
        "name": "dumpio",
        "displayName": "Dumpio"
      },
      {
        "type": "options",
        "default": false,
        "description": "",
        "options": [
          {
            "name": "False",
            "value": false
          },
          {
            "name": "Shell",
            "value": "shell"
          },
          {
            "name": "True",
            "value": true
          }
        ],
        "name": "headless",
        "displayName": "Headless"
      },
      {
        "type": "fixedCollection",
        "default": [],
        "typeOptions": {
          "multipleValues": true
        },
        "displayName": "Ignoredefaultargs",
        "name": "ignoreDefaultArgs",
        "description": "",
        "placeholder": "Add item",
        "options": [
          {
            "name": "items",
            "displayName": "Items",
            "values": [
              {
                "name": "Item",
                "displayName": "Item",
                "type": "string",
                "default": ""
              }
            ]
          }
        ]
      },
      {
        "type": "boolean",
        "default": true,
        "description": "",
        "name": "ignoreHTTPSErrors",
        "displayName": "Ignorehttpserrors"
      },
      {
        "type": "number",
        "default": 0,
        "description": "",
        "name": "slowMo",
        "displayName": "Slowmo"
      },
      {
        "type": "boolean",
        "default": true,
        "description": "",
        "name": "stealth",
        "displayName": "Stealth"
      },
      {
        "type": "number",
        "default": 0,
        "description": "",
        "name": "timeout",
        "displayName": "Timeout"
      },
      {
        "type": "string",
        "default": "",
        "description": "",
        "name": "userDataDir",
        "displayName": "Userdatadir"
      },
      {
        "type": "boolean",
        "default": true,
        "description": "",
        "name": "waitForInitialPage",
        "displayName": "Waitforinitialpage"
      }
    ],
    "routing": {
      "request": {
        "qs": {
          "launch": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Performance"
        ],
        "enableLaunch": [
          true
        ]
      }
    }
  },
  {
    "displayName": "POST /scrape",
    "name": "operation",
    "type": "notice",
    "typeOptions": {
      "theme": "info"
    },
    "default": "",
    "displayOptions": {
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Scrape"
        ]
      }
    }
  },
  {
    "displayName": "Custom Body",
    "name": "customBody",
    "type": "json",
    "default": "{\n  \"addScriptTag\": [\n    {\n      \"url\": \"string\",\n      \"path\": \"string\",\n      \"content\": \"string\",\n      \"type\": \"string\",\n      \"id\": \"string\"\n    }\n  ],\n  \"addStyleTag\": [\n    {\n      \"url\": \"string\",\n      \"path\": \"string\",\n      \"content\": \"string\"\n    }\n  ],\n  \"authenticate\": {\n    \"username\": \"string\",\n    \"password\": \"string\"\n  },\n  \"bestAttempt\": true,\n  \"cookies\": [\n    {\n      \"name\": \"string\",\n      \"value\": \"string\",\n      \"url\": \"string\",\n      \"domain\": \"string\",\n      \"path\": \"string\",\n      \"secure\": true,\n      \"httpOnly\": true,\n      \"sameSite\": \"Lax\",\n      \"expires\": 0,\n      \"priority\": \"High\",\n      \"sameParty\": true,\n      \"sourceScheme\": \"NonSecure\",\n      \"partitionKey\": \"string\"\n    }\n  ],\n  \"debugOpts\": {\n    \"console\": true,\n    \"cookies\": true,\n    \"html\": true,\n    \"network\": true,\n    \"screenshot\": true\n  },\n  \"elements\": [\n    {\n      \"selector\": \"string\",\n      \"timeout\": 0\n    }\n  ],\n  \"emulateMediaType\": \"string\",\n  \"gotoOptions\": {\n    \"referer\": \"string\",\n    \"referrerPolicy\": \"string\",\n    \"timeout\": 0,\n    \"waitUntil\": [\n      \"domcontentloaded\"\n    ],\n    \"signal\": {\n      \"aborted\": true,\n      \"onabort\": {},\n      \"reason\": {}\n    }\n  },\n  \"html\": \"string\",\n  \"rejectRequestPattern\": [\n    \"string\"\n  ],\n  \"rejectResourceTypes\": [\n    \"cspviolationreport\"\n  ],\n  \"requestInterceptors\": [\n    {\n      \"pattern\": \"string\",\n      \"response\": {}\n    }\n  ],\n  \"setExtraHTTPHeaders\": {},\n  \"setJavaScriptEnabled\": true,\n  \"url\": \"string\",\n  \"userAgent\": \"string\",\n  \"viewport\": {\n    \"width\": 0,\n    \"height\": 0,\n    \"deviceScaleFactor\": 0,\n    \"isMobile\": true,\n    \"isLandscape\": true,\n    \"hasTouch\": true\n  },\n  \"waitForEvent\": {\n    \"event\": \"string\",\n    \"timeout\": 0\n  },\n  \"waitForFunction\": {\n    \"fn\": \"string\",\n    \"polling\": {},\n    \"timeout\": 0\n  },\n  \"waitForSelector\": {\n    \"hidden\": true,\n    \"selector\": \"string\",\n    \"timeout\": 0,\n    \"visible\": true\n  },\n  \"waitFor\": 0\n}",
    "description": "Custom body to send",
    "routing": {
      "request": {
        "body": {
          "customBody": "={{JSON.parse($value)}}"
        }
      },
      "send": {
        "preSend": [
          "${helpers.hooks.preSendActionCustonBody}"
        ]
      }
    },
    "displayOptions": {
      "show": {
        "useCustomBody": [
          true
        ],
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Scrape"
        ]
      }
    }
  },
  {
    "displayName": "Url",
    "name": "url",
    "type": "string",
    "default": "",
    "routing": {
      "request": {
        "body": {
          "url": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Scrape"
        ]
      }
    },
    "required": true
  },
  {
    "displayName": "Elements",
    "name": "elements",
    "type": "fixedCollection",
    "default": [],
    "typeOptions": {
      "multipleValues": true
    },
    "description": "",
    "placeholder": "Add item",
    "options": [
      {
        "name": "items",
        "displayName": "Items",
        "values": [
          {
            "type": "string",
            "default": "",
            "description": "",
            "name": "selector",
            "displayName": "Selector"
          },
          {
            "type": "number",
            "default": 0,
            "description": "",
            "name": "timeout",
            "displayName": "Timeout"
          }
        ]
      }
    ],
    "routing": {
      "request": {
        "body": {
          "elements": "={{$value.items}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Scrape"
        ]
      }
    }
  },
  {
    "displayName": "Wait For Timeout",
    "name": "waitFor",
    "type": "number",
    "default": 0,
    "routing": {
      "request": {
        "body": {
          "waitFor": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Scrape"
        ]
      }
    }
  },
  {
    "displayName": "Wait For Selector",
    "name": "waitForSelector",
    "type": "fixedCollection",
    "default": {},
    "options": [
      {
        "name": "items",
        "displayName": "Items",
        "values": [
          {
            "type": "boolean",
            "default": true,
            "description": "",
            "name": "hidden",
            "displayName": "Hidden"
          },
          {
            "type": "string",
            "default": "",
            "description": "",
            "name": "selector",
            "displayName": "Selector"
          },
          {
            "type": "number",
            "default": 0,
            "description": "",
            "name": "timeout",
            "displayName": "Timeout"
          },
          {
            "type": "boolean",
            "default": true,
            "description": "",
            "name": "visible",
            "displayName": "Visible"
          }
        ]
      }
    ],
    "routing": {
      "request": {
        "body": {
          "waitForSelector": "={{$value.items}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Scrape"
        ]
      }
    }
  },
  {
    "displayName": "Goto Options",
    "name": "gotoOptions",
    "type": "fixedCollection",
    "default": {},
    "options": [
      {
        "name": "items",
        "displayName": "Items",
        "values": [
          {
            "type": "string",
            "default": "",
            "description": "If provided, it will take preference over the referer header value set by {@link Page.setExtraHTTPHeaderspage.setExtraHTTPHeaders()}",
            "name": "referer",
            "displayName": "Referer"
          },
          {
            "type": "string",
            "default": "",
            "description": "If provided, it will take preference over the referer-policy header value set by {@link Page.setExtraHTTPHeaderspage.setExtraHTTPHeaders()}",
            "name": "referrerPolicy",
            "displayName": "Referrerpolicy"
          },
          {
            "type": "number",
            "default": 0,
            "description": "Maximum wait time in milliseconds. Pass 0 to disable the timeout. The default value can be changed by using the {@link Page.setDefaultTimeout} or {@link Page.setDefaultNavigationTimeout} methods",
            "name": "timeout",
            "displayName": "Timeout"
          },
          {
            "type": "multiOptions",
            "default": [],
            "description": "When to consider waiting succeeds. Given an array of event strings, waiting is considered to be successful after all events have been fired",
            "options": [
              {
                "name": "domcontentloaded",
                "value": "domcontentloaded"
              },
              {
                "name": "load",
                "value": "load"
              },
              {
                "name": "networkidle0",
                "value": "networkidle0"
              },
              {
                "name": "networkidle2",
                "value": "networkidle2"
              }
            ],
            "name": "waitUntil",
            "displayName": "Waituntil"
          },
          {
            "type": "fixedCollection",
            "default": {},
            "description": "A signal object that allows you to cancel the call",
            "options": [
              {
                "name": "items",
                "displayName": "Items",
                "values": [
                  {
                    "type": "boolean",
                    "default": true,
                    "description": "",
                    "name": "aborted",
                    "displayName": "Aborted"
                  },
                  {
                    "type": "json",
                    "default": "{}",
                    "description": "",
                    "name": "onabort",
                    "displayName": "Onabort"
                  },
                  {
                    "type": "string",
                    "default": "",
                    "description": "",
                    "name": "reason",
                    "displayName": "Reason"
                  }
                ]
              }
            ],
            "name": "signal",
            "displayName": "Signal"
          }
        ]
      }
    ],
    "routing": {
      "request": {
        "body": {
          "gotoOptions": "={{$value.items}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Scrape"
        ]
      }
    }
  },
  {
    "displayName": "Wait For Event",
    "name": "waitForEvent",
    "type": "fixedCollection",
    "default": {},
    "options": [
      {
        "name": "items",
        "displayName": "Items",
        "values": [
          {
            "type": "string",
            "default": "",
            "description": "",
            "name": "event",
            "displayName": "Event"
          },
          {
            "type": "number",
            "default": 0,
            "description": "",
            "name": "timeout",
            "displayName": "Timeout"
          }
        ]
      }
    ],
    "routing": {
      "request": {
        "body": {
          "waitForEvent": "={{$value.items}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Scrape"
        ]
      }
    }
  },
  {
    "displayName": "Wait For Function",
    "name": "waitForFunction",
    "type": "fixedCollection",
    "default": {},
    "options": [
      {
        "name": "items",
        "displayName": "Items",
        "values": [
          {
            "type": "string",
            "default": "",
            "description": "The function, or statement, to be evaluated in browser context",
            "name": "fn",
            "displayName": "Fn"
          },
          {
            "type": "string",
            "description": "An interval at which the pageFunction is executed, defaults to raf. If polling is a number, then it is treated as an interval in milliseconds at which the function would be executed. If polling is a string, then it can be one of the following values: \"raf\" or \"mutation\"",
            "name": "polling",
            "displayName": "Polling"
          },
          {
            "type": "number",
            "default": 0,
            "description": "Maximum time to wait for in milliseconds. Defaults to 30000 (30 seconds). Pass 0 to disable timeout",
            "name": "timeout",
            "displayName": "Timeout"
          }
        ]
      }
    ],
    "routing": {
      "request": {
        "body": {
          "waitForFunction": "={{$value.items}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Scrape"
        ]
      }
    }
  },
  {
    "displayName": "Add Script Tag",
    "name": "addScriptTag",
    "type": "fixedCollection",
    "default": [],
    "typeOptions": {
      "multipleValues": true
    },
    "description": "",
    "placeholder": "Add item",
    "options": [
      {
        "name": "items",
        "displayName": "Items",
        "values": [
          {
            "type": "string",
            "default": "",
            "description": "URL of the script to be added",
            "name": "url",
            "displayName": "Url"
          },
          {
            "type": "string",
            "default": "",
            "description": "Path to a JavaScript file to be injected into the frame",
            "name": "path",
            "displayName": "Path"
          },
          {
            "type": "string",
            "default": "",
            "description": "JavaScript to be injected into the frame",
            "name": "content",
            "displayName": "Content"
          },
          {
            "type": "string",
            "default": "",
            "description": "Sets the `type` of the script. Use `module` in order to load an ES2015 module",
            "name": "type",
            "displayName": "Type"
          },
          {
            "type": "string",
            "default": "",
            "description": "Sets the `id` of the script",
            "name": "id",
            "displayName": "Id"
          }
        ]
      }
    ],
    "routing": {
      "request": {
        "body": {
          "addScriptTag": "={{$value.items}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Scrape"
        ]
      }
    }
  },
  {
    "displayName": "Add Style Tag",
    "name": "addStyleTag",
    "type": "fixedCollection",
    "default": [],
    "typeOptions": {
      "multipleValues": true
    },
    "description": "",
    "placeholder": "Add item",
    "options": [
      {
        "name": "items",
        "displayName": "Items",
        "values": [
          {
            "type": "string",
            "default": "",
            "description": "the URL of the CSS file to be added",
            "name": "url",
            "displayName": "Url"
          },
          {
            "type": "string",
            "default": "",
            "description": "The path to a CSS file to be injected into the frame",
            "name": "path",
            "displayName": "Path"
          },
          {
            "type": "string",
            "default": "",
            "description": "Raw CSS content to be injected into the frame",
            "name": "content",
            "displayName": "Content"
          }
        ]
      }
    ],
    "routing": {
      "request": {
        "body": {
          "addStyleTag": "={{$value.items}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Scrape"
        ]
      }
    }
  },
  {
    "displayName": "Set Extra HTTP Headers",
    "name": "setExtraHTTPHeaders",
    "type": "fixedCollection",
    "default": {},
    "description": "Set extra HTTP headers",
    "routing": {
      "request": {
        "body": {
          "setExtraHTTPHeaders": "={{$value.headers}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Scrape"
        ]
      }
    },
    "placeholder": "Add Header",
    "typeOptions": {
      "multipleValues": true
    },
    "options": [
      {
        "displayName": "Set Extra HTTP Headers",
        "name": "headers",
        "values": [
          {
            "displayName": "Name",
            "name": "name",
            "type": "string",
            "default": "",
            "description": "Name of the header"
          },
          {
            "displayName": "Value",
            "name": "value",
            "type": "string",
            "default": "",
            "description": "Value of the header"
          }
        ]
      }
    ]
  },
  {
    "displayName": "Authenticate",
    "name": "authenticate",
    "type": "fixedCollection",
    "default": {},
    "options": [
      {
        "name": "items",
        "displayName": "Items",
        "values": [
          {
            "type": "string",
            "default": "",
            "description": "",
            "name": "username",
            "displayName": "Username"
          },
          {
            "type": "string",
            "default": "",
            "description": "",
            "name": "password",
            "displayName": "Password"
          }
        ]
      }
    ],
    "routing": {
      "request": {
        "body": {
          "authenticate": "={{$value.items}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Scrape"
        ]
      }
    }
  },
  {
    "displayName": "Viewport",
    "name": "viewport",
    "type": "fixedCollection",
    "default": {},
    "options": [
      {
        "name": "items",
        "displayName": "Items",
        "values": [
          {
            "type": "number",
            "default": 0,
            "description": "The page width in CSS pixels",
            "name": "width",
            "displayName": "Width"
          },
          {
            "type": "number",
            "default": 0,
            "description": "The page height in CSS pixels",
            "name": "height",
            "displayName": "Height"
          },
          {
            "type": "number",
            "default": 0,
            "description": "Specify device scale factor. See {@link https://developer.mozilla.org/en-US/docs/Web/API/Window/devicePixelRatio devicePixelRatio} for more info",
            "name": "deviceScaleFactor",
            "displayName": "Devicescalefactor"
          },
          {
            "type": "boolean",
            "default": true,
            "description": "Whether the `meta viewport` tag is taken into account",
            "name": "isMobile",
            "displayName": "Ismobile"
          },
          {
            "type": "boolean",
            "default": true,
            "description": "Specifies if the viewport is in landscape mode",
            "name": "isLandscape",
            "displayName": "Islandscape"
          },
          {
            "type": "boolean",
            "default": true,
            "description": "Specify if the viewport supports touch events",
            "name": "hasTouch",
            "displayName": "Hastouch"
          }
        ]
      }
    ],
    "routing": {
      "request": {
        "body": {
          "viewport": "={{$value.items}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Scrape"
        ]
      }
    }
  },
  {
    "displayName": "Emulate Media Type",
    "name": "emulateMediaType",
    "type": "string",
    "default": "",
    "routing": {
      "request": {
        "body": {
          "emulateMediaType": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Scrape"
        ]
      }
    }
  },
  {
    "displayName": "Timeout",
    "name": "timeout",
    "description": "Override the system-level timeout for this request. Accepts a value in milliseconds",
    "default": 0,
    "type": "number",
    "routing": {
      "request": {
        "qs": {
          "timeout": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Scrape"
        ]
      }
    }
  },
  {
    "displayName": "Html",
    "name": "html",
    "type": "string",
    "default": "",
    "routing": {
      "request": {
        "body": {
          "html": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Scrape"
        ]
      }
    }
  },
  {
    "displayName": "User Agent",
    "name": "userAgent",
    "type": "string",
    "default": "",
    "routing": {
      "request": {
        "body": {
          "userAgent": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Scrape"
        ]
      }
    }
  },
  {
    "displayName": "Best Attempt",
    "name": "bestAttempt",
    "type": "boolean",
    "default": true,
    "description": "When bestAttempt is set to true, browserless attempt to proceed when \"awaited\" events fail or timeout. This includes things like goto, waitForSelector, and more",
    "routing": {
      "request": {
        "body": {
          "bestAttempt": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Scrape"
        ]
      }
    }
  },
  {
    "name": "enableCookies",
    "displayName": "Enable Cookies",
    "type": "boolean",
    "default": false,
    "description": "Enable cookies",
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Scrape"
        ]
      }
    }
  },
  {
    "displayName": "Cookies",
    "name": "cookies",
    "type": "json",
    "default": "[]",
    "typeOptions": {},
    "description": "Array of cookie objects expected by cookie-editor extension",
    "placeholder": "Add item",
    "options": [],
    "routing": {
      "request": {
        "body": {
          "cookies": "={{ (JSON.parse($value) || []).reduce((a, c) => ({ ...a, [c.name]: c.value }), {}) }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Scrape"
        ],
        "enableCookies": [
          true
        ]
      }
    }
  },
  {
    "displayName": "Block Ads",
    "name": "blockAds",
    "description": "Whether or nor to load ad-blocking extensions for the session. This currently uses uBlock Origin and may cause certain sites to not load properly",
    "default": true,
    "type": "boolean",
    "routing": {
      "request": {
        "qs": {
          "blockAds": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Scrape"
        ]
      }
    }
  },
  {
    "displayName": "Set Java Script Enabled",
    "name": "setJavaScriptEnabled",
    "type": "boolean",
    "default": true,
    "routing": {
      "request": {
        "body": {
          "setJavaScriptEnabled": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Scrape"
        ]
      }
    }
  },
  {
    "name": "enableLaunch",
    "displayName": "Enable Launch",
    "type": "boolean",
    "default": false,
    "description": "Launch a new browser instance",
    "displayOptions": {
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Scrape"
        ]
      }
    }
  },
  {
    "displayName": "Launch",
    "name": "launch",
    "description": "",
    "default": {},
    "type": "collection",
    "typeOptions": {},
    "placeholder": "Add item",
    "options": [
      {
        "type": "fixedCollection",
        "default": [],
        "typeOptions": {
          "multipleValues": true
        },
        "displayName": "Args",
        "name": "args",
        "description": "",
        "placeholder": "Add item",
        "options": [
          {
            "name": "items",
            "displayName": "Items",
            "values": [
              {
                "name": "Item",
                "displayName": "Item",
                "type": "string",
                "default": ""
              }
            ]
          }
        ]
      },
      {
        "type": "fixedCollection",
        "default": {},
        "description": "",
        "options": [
          {
            "name": "items",
            "displayName": "Items",
            "values": [
              {
                "type": "number",
                "default": 0,
                "description": "",
                "name": "deviceScaleFactor",
                "displayName": "Devicescalefactor"
              },
              {
                "type": "boolean",
                "default": true,
                "description": "",
                "name": "hasTouch",
                "displayName": "Hastouch"
              },
              {
                "type": "number",
                "default": 0,
                "description": "",
                "name": "height",
                "displayName": "Height"
              },
              {
                "type": "boolean",
                "default": true,
                "description": "",
                "name": "isLandscape",
                "displayName": "Islandscape"
              },
              {
                "type": "boolean",
                "default": true,
                "description": "",
                "name": "isMobile",
                "displayName": "Ismobile"
              },
              {
                "type": "number",
                "default": 0,
                "description": "",
                "name": "width",
                "displayName": "Width"
              }
            ]
          }
        ],
        "name": "defaultViewport",
        "displayName": "Defaultviewport"
      },
      {
        "type": "boolean",
        "default": true,
        "description": "",
        "name": "devtools",
        "displayName": "Devtools"
      },
      {
        "type": "boolean",
        "default": true,
        "description": "",
        "name": "dumpio",
        "displayName": "Dumpio"
      },
      {
        "type": "options",
        "default": false,
        "description": "",
        "options": [
          {
            "name": "False",
            "value": false
          },
          {
            "name": "Shell",
            "value": "shell"
          },
          {
            "name": "True",
            "value": true
          }
        ],
        "name": "headless",
        "displayName": "Headless"
      },
      {
        "type": "fixedCollection",
        "default": [],
        "typeOptions": {
          "multipleValues": true
        },
        "displayName": "Ignoredefaultargs",
        "name": "ignoreDefaultArgs",
        "description": "",
        "placeholder": "Add item",
        "options": [
          {
            "name": "items",
            "displayName": "Items",
            "values": [
              {
                "name": "Item",
                "displayName": "Item",
                "type": "string",
                "default": ""
              }
            ]
          }
        ]
      },
      {
        "type": "boolean",
        "default": true,
        "description": "",
        "name": "ignoreHTTPSErrors",
        "displayName": "Ignorehttpserrors"
      },
      {
        "type": "number",
        "default": 0,
        "description": "",
        "name": "slowMo",
        "displayName": "Slowmo"
      },
      {
        "type": "boolean",
        "default": true,
        "description": "",
        "name": "stealth",
        "displayName": "Stealth"
      },
      {
        "type": "number",
        "default": 0,
        "description": "",
        "name": "timeout",
        "displayName": "Timeout"
      },
      {
        "type": "string",
        "default": "",
        "description": "",
        "name": "userDataDir",
        "displayName": "Userdatadir"
      },
      {
        "type": "boolean",
        "default": true,
        "description": "",
        "name": "waitForInitialPage",
        "displayName": "Waitforinitialpage"
      }
    ],
    "routing": {
      "request": {
        "qs": {
          "launch": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Scrape"
        ],
        "enableLaunch": [
          true
        ]
      }
    }
  },
  {
    "displayName": "Reject Resource Types",
    "name": "rejectResourceTypes",
    "type": "multiOptions",
    "default": [],
    "options": [
      {
        "name": "cspviolationreport",
        "value": "cspviolationreport"
      },
      {
        "name": "document",
        "value": "document"
      },
      {
        "name": "eventsource",
        "value": "eventsource"
      },
      {
        "name": "fetch",
        "value": "fetch"
      },
      {
        "name": "font",
        "value": "font"
      },
      {
        "name": "image",
        "value": "image"
      },
      {
        "name": "manifest",
        "value": "manifest"
      },
      {
        "name": "media",
        "value": "media"
      },
      {
        "name": "other",
        "value": "other"
      },
      {
        "name": "ping",
        "value": "ping"
      },
      {
        "name": "prefetch",
        "value": "prefetch"
      },
      {
        "name": "preflight",
        "value": "preflight"
      },
      {
        "name": "script",
        "value": "script"
      },
      {
        "name": "signedexchange",
        "value": "signedexchange"
      },
      {
        "name": "stylesheet",
        "value": "stylesheet"
      },
      {
        "name": "texttrack",
        "value": "texttrack"
      },
      {
        "name": "websocket",
        "value": "websocket"
      },
      {
        "name": "xhr",
        "value": "xhr"
      }
    ],
    "routing": {
      "request": {
        "body": {
          "rejectResourceTypes": "={{ $value }}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Scrape"
        ]
      }
    }
  },
  {
    "displayName": "Reject Request Pattern",
    "name": "rejectRequestPattern",
    "type": "fixedCollection",
    "default": [],
    "typeOptions": {
      "multipleValues": true
    },
    "description": "",
    "placeholder": "Add item",
    "options": [
      {
        "name": "items",
        "displayName": "Items",
        "values": [
          {
            "name": "Item",
            "displayName": "Item",
            "type": "string",
            "default": ""
          }
        ]
      }
    ],
    "routing": {
      "request": {
        "body": {
          "rejectRequestPattern": "={{$value.items}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Scrape"
        ]
      }
    }
  },
  {
    "displayName": "Request Interceptors",
    "name": "requestInterceptors",
    "type": "fixedCollection",
    "default": [],
    "typeOptions": {
      "multipleValues": true
    },
    "description": "",
    "placeholder": "Add item",
    "options": [
      {
        "name": "items",
        "displayName": "Items",
        "values": [
          {
            "type": "string",
            "default": "",
            "description": "An array of patterns (using `req.url().match(r.pattern)` to match) and their corresponding responses to use in order to fulfill those requests",
            "name": "pattern",
            "displayName": "Pattern"
          },
          {
            "type": "fixedCollection",
            "default": {},
            "description": "",
            "options": [
              {
                "name": "items",
                "displayName": "Items",
                "values": [
                  {
                    "type": "number",
                    "default": 0,
                    "description": "",
                    "name": "status",
                    "displayName": "Status"
                  },
                  {
                    "type": "json",
                    "default": "{}",
                    "description": "Optional response headers. All values are converted to strings",
                    "name": "headers",
                    "displayName": "Headers"
                  },
                  {
                    "type": "string",
                    "default": "",
                    "description": "",
                    "name": "contentType",
                    "displayName": "Contenttype"
                  },
                  {
                    "type": "fixedCollection",
                    "default": {},
                    "description": "",
                    "options": [
                      {
                        "name": "items",
                        "displayName": "Items",
                        "values": [
                          {
                            "type": "number",
                            "default": 0,
                            "description": "",
                            "name": "BYTES_PER_ELEMENT",
                            "displayName": "Bytes Per Element"
                          },
                          {
                            "type": "string",
                            "default": {},
                            "description": "",
                            "name": "buffer",
                            "displayName": "Buffer"
                          },
                          {
                            "type": "number",
                            "default": 0,
                            "description": "",
                            "name": "byteLength",
                            "displayName": "Bytelength"
                          },
                          {
                            "type": "number",
                            "default": 0,
                            "description": "",
                            "name": "byteOffset",
                            "displayName": "Byteoffset"
                          },
                          {
                            "type": "number",
                            "default": 0,
                            "description": "",
                            "name": "length",
                            "displayName": "Length"
                          },
                          {
                            "type": "string",
                            "default": "",
                            "description": "",
                            "name": "__@toStringTag@42114",
                            "displayName": "Tostringtag 42114"
                          }
                        ]
                      }
                    ],
                    "name": "body",
                    "displayName": "Body"
                  }
                ]
              }
            ],
            "name": "response",
            "displayName": "Response"
          }
        ]
      }
    ],
    "routing": {
      "request": {
        "body": {
          "requestInterceptors": "={{$value.items}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Scrape"
        ]
      }
    }
  },
  {
    "displayName": "Debug Opts",
    "name": "debugOpts",
    "type": "fixedCollection",
    "default": {},
    "options": [
      {
        "name": "items",
        "displayName": "Items",
        "values": [
          {
            "type": "boolean",
            "default": true,
            "description": "",
            "name": "console",
            "displayName": "Console"
          },
          {
            "type": "boolean",
            "default": true,
            "description": "",
            "name": "cookies",
            "displayName": "Cookies"
          },
          {
            "type": "boolean",
            "default": true,
            "description": "",
            "name": "html",
            "displayName": "Html"
          },
          {
            "type": "boolean",
            "default": true,
            "description": "",
            "name": "network",
            "displayName": "Network"
          },
          {
            "type": "boolean",
            "default": true,
            "description": "",
            "name": "screenshot",
            "displayName": "Screenshot"
          }
        ]
      }
    ],
    "routing": {
      "request": {
        "body": {
          "debugOpts": "={{$value.items}}"
        }
      }
    },
    "displayOptions": {
      "hide": {
        "useCustomBody": [
          true
        ]
      },
      "show": {
        "resource": [
          "Browser Rest Apis"
        ],
        "operation": [
          "Scrape"
        ]
      }
    }
  }
]
